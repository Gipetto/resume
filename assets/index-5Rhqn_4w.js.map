{"version":3,"file":"index-5Rhqn_4w.js","sources":["../../node_modules/esm-env/false.js","../../node_modules/svelte/src/internal/shared/utils.js","../../node_modules/svelte/src/internal/client/constants.js","../../node_modules/svelte/src/internal/client/reactivity/equality.js","../../node_modules/svelte/src/internal/client/errors.js","../../node_modules/svelte/src/internal/flags/index.js","../../node_modules/svelte/src/constants.js","../../node_modules/svelte/src/internal/client/context.js","../../node_modules/svelte/src/internal/client/reactivity/sources.js","../../node_modules/svelte/src/internal/client/dom/hydration.js","../../node_modules/svelte/src/internal/client/proxy.js","../../node_modules/svelte/src/internal/client/dom/operations.js","../../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../../node_modules/svelte/src/internal/client/reactivity/effects.js","../../node_modules/svelte/src/internal/client/dom/task.js","../../node_modules/svelte/src/internal/client/runtime.js","../../node_modules/svelte/src/utils.js","../../node_modules/svelte/src/internal/client/dom/elements/misc.js","../../node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../../node_modules/svelte/src/internal/client/dom/elements/events.js","../../node_modules/svelte/src/internal/client/dom/reconciler.js","../../node_modules/svelte/src/internal/client/dom/template.js","../../node_modules/svelte/src/internal/client/render.js","../../node_modules/svelte/src/internal/client/dom/blocks/if.js","../../node_modules/svelte/src/internal/client/dom/blocks/each.js","../../node_modules/svelte/src/internal/client/dom/blocks/html.js","../../node_modules/svelte/src/internal/client/dom/blocks/snippet.js","../../node_modules/svelte/src/internal/client/dom/blocks/svelte-element.js","../../node_modules/clsx/dist/clsx.mjs","../../node_modules/svelte/src/internal/shared/attributes.js","../../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../../node_modules/svelte/src/internal/client/dom/elements/class.js","../../node_modules/svelte/src/internal/client/dom/legacy/lifecycle.js","../../node_modules/svelte/src/internal/client/dom/legacy/misc.js","../../node_modules/svelte/src/internal/client/reactivity/props.js","../../node_modules/svelte/src/version.js","../../node_modules/svelte/src/internal/disclose-version.js","../../src/store.svelte.ts","../../src/components/Header.svelte","../../src/services/i18n.svelte.ts","../../src/components/Text.svelte","../../src/components/Date.svelte","../../src/components/Position.svelte","../../src/components/Patent.svelte","../../src/components/Icon.svelte","../../src/components/JobDefinition.svelte","../../node_modules/svelte/src/internal/flags/legacy.js","../../src/components/BackToTop.svelte","../../src/components/History.svelte","../../src/components/Buzzwords.svelte","../../src/components/ThemeSwitcher.svelte","../../src/components/Footer.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["export default false;\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\n * @returns {never}\n */\nexport function state_unsafe_local_read() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state\\nhttps://svelte.dev/e/state_unsafe_local_read`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_local_read`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","/** @import { ComponentContext } from '#client' */\n\nimport { DEV } from 'esm-env';\nimport { add_owner } from './dev/ownership.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { source } from './reactivity/sources.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction,\n\tuntrack\n} from './runtime.js';\nimport { effect } from './reactivity/effects.js';\nimport { legacy_mode_flag } from '../flags/index.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\n\tif (DEV) {\n\t\t// When state is put into context, we treat as if it's global from now on.\n\t\t// We do for performance reasons (it's for example very expensive to call\n\t\t// getContext on a big object many times when part of a list component)\n\t\t// and danger of false positives.\n\t\tuntrack(() => add_owner(context, null, true));\n\t}\n\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n","/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\tderived_sources,\n\tset_derived_sources,\n\tcheck_dirtiness,\n\tset_is_flushing_effect,\n\tis_flushing_effect,\n\tuntracking\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT\n} from '../constants.js';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\n\nexport let inspect_effects = new Set();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n */\nexport function state(v) {\n\treturn push_derived_source(source(v));\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\nexport function mutable_state(v, immutable = false) {\n\treturn push_derived_source(mutable_source(v, immutable));\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction push_derived_source(source) {\n\tif (active_reaction !== null && !untracking && (active_reaction.f & DERIVED) !== 0) {\n\t\tif (derived_sources === null) {\n\t\t\tset_derived_sources([source]);\n\t\t} else {\n\t\t\tderived_sources.push(source);\n\t\t}\n\t}\n\n\treturn source;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t!untracking &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t// If the source was created locally within the current derived, then\n\t\t// we allow the mutation.\n\t\t(derived_sources === null || !derived_sources.includes(source))\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\treturn internal_set(source, value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\t\tsource.v = value;\n\t\tsource.wv = increment_write_version();\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t\tif (active_effect != null) {\n\t\t\t\tsource.trace_need_increase = true;\n\t\t\t\tsource.trace_v ??= old_value;\n\t\t\t}\n\t\t}\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\t\t\tvar previously_flushing_effect = is_flushing_effect;\n\t\t\tset_is_flushing_effect(true);\n\t\t\ttry {\n\t\t\t\tfor (const effect of inspects) {\n\t\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t\t}\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t\t}\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","/** @import { ProxyMetadata, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, active_effect } from './runtime.js';\nimport { component_context } from './context.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/**\n * @template T\n * @param {T} value\n * @param {ProxyMetadata | null} [parent]\n * @param {Source<T>} [prev] dev mode only\n * @returns {T}\n */\nexport function proxy(value, parent = null, prev) {\n\t/** @type {Error | null} */\n\tvar stack = null;\n\tif (DEV && tracing_mode_flag) {\n\t\tstack = get_stack('CreatedAt');\n\t}\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\t/** @type {ProxyMetadata} */\n\tvar metadata;\n\n\tif (DEV) {\n\t\tmetadata = {\n\t\t\tparent,\n\t\t\towners: null\n\t\t};\n\n\t\tif (prev) {\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t// @ts-expect-error\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\n\t\t} else {\n\t\t\tmetadata.owners =\n\t\t\t\tparent === null\n\t\t\t\t\t? component_context !== null\n\t\t\t\t\t\t? new Set([component_context.function])\n\t\t\t\t\t\t: null\n\t\t\t\t\t: new Set();\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = source(descriptor.value, stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(s, proxy(descriptor.value, metadata));\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(prop, source(UNINITIALIZED, stack));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn metadata;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = source(proxy(exists ? target[prop] : UNINITIALIZED, metadata), stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\n\t\t\t\t// of the array itself, while the individual items would have ownership\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\n\t\t\t\t// For this reason, we need to widen the ownership of the children\n\t\t\t\t// upon access when we detect they are not connected.\n\t\t\t\tif (DEV) {\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = source(has ? proxy(target[prop], metadata) : UNINITIALIZED, stack);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = source(UNINITIALIZED, stack);\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = source(undefined, stack);\n\t\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t}\n\n\t\t\tif (DEV) {\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t}\n\t\t\t\tcheck_ownership(metadata);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\treturn value[STATE_SYMBOL];\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {boolean} */\nexport var is_firefox;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\tis_firefox = /Firefox/.test(navigator.userAgent);\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__styles = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { CLEAN, DERIVED, DIRTY, EFFECT_HAS_DERIVED, MAYBE_DIRTY, UNOWNED } from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { component_context } from '../context.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack,\n\tskip_reaction,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived } from './deriveds.js';\nimport { component_context, dev_current_component_function } from '../context.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\tvar parent_effect = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent_effect !== null && (parent_effect.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent_effect = parent_effect.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : parent_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && !is_root && push) {\n\t\tif (parent_effect !== null) {\n\t\t\tpush_effect(effect, parent_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\treturn active_reaction !== null && !untracking;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tconst deriveds = thunks.map(d);\n\tconst effect = () => fn(...deriveds.map(get));\n\n\tif (DEV) {\n\t\tdefine_property(effect, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\n\treturn block(effect);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nexport const request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\nlet is_micro_task_queued = false;\nlet is_idle_task_queued = false;\n\n/** @type {Array<() => void>} */\nlet current_queued_micro_tasks = [];\n/** @type {Array<() => void>} */\nlet current_queued_idle_tasks = [];\n\nfunction process_micro_tasks() {\n\tis_micro_task_queued = false;\n\tconst tasks = current_queued_micro_tasks.slice();\n\tcurrent_queued_micro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction process_idle_tasks() {\n\tis_idle_task_queued = false;\n\tconst tasks = current_queued_idle_tasks.slice();\n\tcurrent_queued_idle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (!is_micro_task_queued) {\n\t\tis_micro_task_queued = true;\n\t\tqueueMicrotask(process_micro_tasks);\n\t}\n\tcurrent_queued_micro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (!is_idle_task_queued) {\n\t\tis_idle_task_queued = true;\n\t\trequest_idle_callback(process_idle_tasks);\n\t}\n\tcurrent_queued_idle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (is_micro_task_queued) {\n\t\tprocess_micro_tasks();\n\t}\n\tif (is_idle_task_queued) {\n\t\tprocess_idle_tasks();\n\t}\n}\n","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { internal_set } from './reactivity/sources.js';\nimport { destroy_derived_effects, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function\n} from './context.js';\nimport { is_firefox } from './dom/operations.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nexport let is_throwing_error = false;\n\n// Used for controlling the flush of effects.\nlet scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\nlet flush_count = 0;\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a derived, we record them so that we can safely allow\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\n * @type {null | Source[]}\n */\nexport let derived_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_derived_sources(sources) {\n\tderived_sources = sources;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tvar derived = /** @type {Derived} */ (reaction);\n\t\t\t\tvar parent = derived.parent;\n\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\n\t\t\t\t\t// de-duplicate dependencies in that case\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(derived)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(derived);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\tderived.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t// If the unowned derived is now fully connected to the graph again (it's unowned and reconnected, has a parent\n\t\t\t\t// and the parent is not unowned), then we can mark it as connected again, removing the need for the unowned\n\t\t\t\t// flag\n\t\t\t\tif (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t\t\tderived.f ^= UNOWNED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (\n\t\t!DEV ||\n\t\tcomponent_context === null ||\n\t\t!(error instanceof Error) ||\n\t\thandled_errors.has(error)\n\t) {\n\t\tpropagate_error(error, effect);\n\t\treturn;\n\t}\n\n\thandled_errors.add(error);\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = is_firefox ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\tdefine_property(error, 'component_stack', {\n\t\tvalue: component_stack\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {boolean} [root]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(/** @type {Derived} */ (reaction), effect, false);\n\t\t} else if (effect === reaction) {\n\t\t\tif (root) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar prev_derived_sources = derived_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 &&\n\t\t(!is_flushing_effect || previous_reaction === null || previous_untracking);\n\n\tderived_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tread_version++;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t!untracking &&\n\t\t\tdeps !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null) {\n\t\t\tread_version++;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tderived_sources = prev_derived_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\n\tactive_effect = effect;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\ttry {\n\t\t\te.effect_update_depth_exceeded();\n\t\t} catch (error) {\n\t\t\tif (DEV) {\n\t\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\t\tdefine_property(error, 'stack', {\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t\t// if there's an effect available from when it was last scheduled\n\t\t\tif (last_scheduled_effect !== null) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (DEV) {\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\tif ((effect.f & CLEAN) === 0) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t}\n\n\t\t\tvar collected_effects = process_effects(effect);\n\t\t\tflush_queued_effects(collected_effects);\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = queued_root_effects;\n\tqueued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tlast_scheduled_effect = signal;\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} effect\n * @returns {Effect[]}\n */\nfunction process_effects(effect) {\n\t/** @type {Effect[]} */\n\tvar effects = [];\n\n\tvar current_effect = effect.first;\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\tvar is_branch = (flags & BRANCH_EFFECT) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\t\tvar sibling = current_effect.next;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(current_effect);\n\t\t\t} else if (is_branch) {\n\t\t\t\tcurrent_effect.f ^= CLEAN;\n\t\t\t} else {\n\t\t\t\t// Ensure we set the effect to be the active reaction\n\t\t\t\t// to ensure that unowned deriveds are correctly tracked\n\t\t\t\t// because we're flushing the current effect\n\t\t\t\tvar previous_active_reaction = active_reaction;\n\t\t\t\ttry {\n\t\t\t\t\tactive_reaction = current_effect;\n\t\t\t\t\tif (check_dirtiness(current_effect)) {\n\t\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandle_error(error, current_effect, null, current_effect.ctx);\n\t\t\t\t} finally {\n\t\t\t\t\tactive_reaction = previous_active_reaction;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar child = current_effect.first;\n\n\t\t\tif (child !== null) {\n\t\t\t\tcurrent_effect = child;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\treturn effects;\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @returns {any}\n */\nexport function flush_sync(fn) {\n\tvar previous_scheduler_mode = scheduler_mode;\n\tvar previous_queued_root_effects = queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tscheduler_mode = FLUSH_SYNC;\n\t\tqueued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tflush_queued_root_effects(previous_queued_root_effects);\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tscheduler_mode = previous_scheduler_mode;\n\t\tqueued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\n\t\t\te.state_unsafe_local_read();\n\t\t}\n\t\tvar deps = active_reaction.deps;\n\t\tif (signal.rv < read_version) {\n\t\t\tsignal.rv = read_version;\n\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\tskipped_deps++;\n\t\t\t} else if (new_deps === null) {\n\t\t\t\tnew_deps = [signal];\n\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\n\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\n\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\n\t\t\t\t// we don't have duplicates\n\t\t\t\tnew_deps.push(signal);\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nexport function capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory',\n\t'defer',\n\t'disablepictureinpicture',\n\t'disableremoteplayback'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject',\n\tnovalidate: 'noValidate',\n\tallowfullscreen: 'allowFullscreen',\n\tdisablepictureinpicture: 'disablePictureInPicture',\n\tdisableremoteplayback: 'disableRemotePlayback'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject',\n\t'noValidate',\n\t'allowFullscreen',\n\t'disablePictureInPicture',\n\t'disableRemotePlayback'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$props.id',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @param {string | undefined} location\n */\nexport function sanitize_location(location) {\n\treturn location?.replace(/\\//g, '/\\u200b');\n}\n","import { hydrating } from '../hydration.js';\nimport { clear_text_content, get_first_child } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {HTMLElement} dom\n * @param {boolean} value\n * @returns {void}\n */\nexport function autofocus(dom, value) {\n\tif (value) {\n\t\tconst body = document.body;\n\t\tdom.autofocus = true;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (document.activeElement === body) {\n\t\t\t\tdom.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * The child of a textarea actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLTextAreaElement} dom\n * @returns {void}\n */\nexport function remove_textarea_child(dom) {\n\tif (hydrating && get_first_child(dom) !== null) {\n\t\tclear_text_content(dom);\n\t}\n}\n\nlet listening_to_form_reset = false;\n\nexport function add_form_reset_listener() {\n\tif (!listening_to_form_reset) {\n\t\tlistening_to_form_reset = true;\n\t\tdocument.addEventListener(\n\t\t\t'reset',\n\t\t\t(evt) => {\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\n\t\t\t\t// elements have not updated to their reset values yet\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (!evt.defaultPrevented) {\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\te.__on_r?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\n\t\t\t{ capture: true }\n\t\t);\n\t}\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (delegated !== undefined && !(/** @type {any} */ (current_target).disabled)) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler === 'function') {\n\t\thandler.apply(element, args);\n\t} else if (has_side_effects || handler != null || error) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\n\t\tconst event_name = args[0].type;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child, is_firefox } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n\nlet uid = 1;\n\n/**\n * Create (or hydrate) an unique UID for the component instance.\n */\nexport function props_id() {\n\tif (\n\t\thydrating &&\n\t\thydrate_node &&\n\t\thydrate_node.nodeType === 8 &&\n\t\thydrate_node.textContent?.startsWith('#s')\n\t) {\n\t\tconst id = hydrate_node.textContent.substring(1);\n\t\thydrate_next();\n\t\treturn id;\n\t}\n\n\treturn 'c' + uid++;\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node) => void, flag?: boolean) => void) => void} fn\n * @param {boolean} [elseif] True if this is an `{:else if ...}` block rather than an `{#if ...}`, as that affects which transitions are considered 'local'\n * @returns {void}\n */\nexport function if_block(node, fn, elseif = false) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = elseif ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (/** @type {(anchor: Node) => void} */ fn, flag = true) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tconst is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else if (fn) {\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (fn) {\n\t\t\t\talternate_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, active_reaction, get } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { derived_safe_equal } from '../../reactivity/deriveds.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\t// TODO: ideally we could use derived for runes mode but because of the ability\n\t// to use a store which can be mutated, we can't do that here as mutating a store\n\t// will still result in the collection array being the same from the store\n\tvar each_array = derived_safe_equal(() => {\n\t\tvar collection = get_collection();\n\n\t\treturn is_array(collection) ? collection : collection == null ? [] : array_from(collection);\n\t});\n\n\tblock(() => {\n\t\tvar array = get(each_array);\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key, get_collection);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget(each_array);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).debug = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i, get_collection), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { FILENAME, HYDRATION_ERROR } from '../../../../constants.js';\nimport { block, branch, destroy_effect } from '../../reactivity/effects.js';\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from '../hydration.js';\nimport { create_fragment_from_html } from '../reconciler.js';\nimport { assign_nodes } from '../template.js';\nimport * as w from '../../warnings.js';\nimport { hash, sanitize_location } from '../../../../utils.js';\nimport { DEV } from 'esm-env';\nimport { dev_current_component_function } from '../../context.js';\nimport { get_first_child, get_next_sibling } from '../operations.js';\n\n/**\n * @param {Element} element\n * @param {string | null} server_hash\n * @param {string} value\n */\nfunction check_hash(element, server_hash, value) {\n\tif (!server_hash || server_hash === hash(String(value ?? ''))) return;\n\n\tlet location;\n\n\t// @ts-expect-error\n\tconst loc = element.__svelte_meta?.loc;\n\tif (loc) {\n\t\tlocation = `near ${loc.file}:${loc.line}:${loc.column}`;\n\t} else if (dev_current_component_function?.[FILENAME]) {\n\t\tlocation = `in ${dev_current_component_function[FILENAME]}`;\n\t}\n\n\tw.hydration_html_changed(sanitize_location(location));\n}\n\n/**\n * @param {Element | Text | Comment} node\n * @param {() => string} get_value\n * @param {boolean} svg\n * @param {boolean} mathml\n * @param {boolean} [skip_warning]\n * @returns {void}\n */\nexport function html(node, get_value, svg, mathml, skip_warning) {\n\tvar anchor = node;\n\n\tvar value = '';\n\n\t/** @type {Effect | undefined} */\n\tvar effect;\n\n\tblock(() => {\n\t\tif (value === (value = get_value() ?? '')) {\n\t\t\tif (hydrating) {\n\t\t\t\thydrate_next();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (effect !== undefined) {\n\t\t\tdestroy_effect(effect);\n\t\t\teffect = undefined;\n\t\t}\n\n\t\tif (value === '') return;\n\n\t\teffect = branch(() => {\n\t\t\tif (hydrating) {\n\t\t\t\t// We're deliberately not trying to repair mismatches between server and client,\n\t\t\t\t// as it's costly and error-prone (and it's an edge case to have a mismatch anyway)\n\t\t\t\tvar hash = /** @type {Comment} */ (hydrate_node).data;\n\t\t\t\tvar next = hydrate_next();\n\t\t\t\tvar last = next;\n\n\t\t\t\twhile (\n\t\t\t\t\tnext !== null &&\n\t\t\t\t\t(next.nodeType !== 8 || /** @type {Comment} */ (next).data !== '')\n\t\t\t\t) {\n\t\t\t\t\tlast = next;\n\t\t\t\t\tnext = /** @type {TemplateNode} */ (get_next_sibling(next));\n\t\t\t\t}\n\n\t\t\t\tif (next === null) {\n\t\t\t\t\tw.hydration_mismatch();\n\t\t\t\t\tthrow HYDRATION_ERROR;\n\t\t\t\t}\n\n\t\t\t\tif (DEV && !skip_warning) {\n\t\t\t\t\tcheck_hash(/** @type {Element} */ (next.parentNode), hash, value);\n\t\t\t\t}\n\n\t\t\t\tassign_nodes(hydrate_node, last);\n\t\t\t\tanchor = set_hydrate_node(next);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar html = value + '';\n\t\t\tif (svg) html = `<svg>${html}</svg>`;\n\t\t\telse if (mathml) html = `<math>${html}</math>`;\n\n\t\t\t// Don't use create_fragment_with_script_from_html here because that would mean script tags are executed.\n\t\t\t// @html is basically `.innerHTML = ...` and that doesn't execute scripts either due to security reasons.\n\t\t\t/** @type {DocumentFragment | Element} */\n\t\t\tvar node = create_fragment_from_html(html);\n\n\t\t\tif (svg || mathml) {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(node));\n\t\t\t}\n\n\t\t\tassign_nodes(\n\t\t\t\t/** @type {TemplateNode} */ (get_first_child(node)),\n\t\t\t\t/** @type {TemplateNode} */ (node.lastChild)\n\t\t\t);\n\n\t\t\tif (svg || mathml) {\n\t\t\t\twhile (get_first_child(node)) {\n\t\t\t\t\tanchor.before(/** @type {Node} */ (get_first_child(node)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanchor.before(node);\n\t\t\t}\n\t\t});\n\t});\n}\n","/** @import { Snippet } from 'svelte' */\n/** @import { Effect, TemplateNode } from '#client' */\n/** @import { Getters } from '#shared' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport { branch, block, destroy_effect, teardown } from '../../reactivity/effects.js';\nimport {\n\tdev_current_component_function,\n\tset_dev_current_component_function\n} from '../../context.js';\nimport { hydrate_next, hydrate_node, hydrating } from '../hydration.js';\nimport { create_fragment_from_html } from '../reconciler.js';\nimport { assign_nodes } from '../template.js';\nimport * as w from '../../warnings.js';\nimport * as e from '../../errors.js';\nimport { DEV } from 'esm-env';\nimport { get_first_child, get_next_sibling } from '../operations.js';\nimport { noop } from '../../../shared/utils.js';\n\n/**\n * @template {(node: TemplateNode, ...args: any[]) => void} SnippetFn\n * @param {TemplateNode} node\n * @param {() => SnippetFn | null | undefined} get_snippet\n * @param {(() => any)[]} args\n * @returns {void}\n */\nexport function snippet(node, get_snippet, ...args) {\n\tvar anchor = node;\n\n\t/** @type {SnippetFn | null | undefined} */\n\t// @ts-ignore\n\tvar snippet = noop;\n\n\t/** @type {Effect | null} */\n\tvar snippet_effect;\n\n\tblock(() => {\n\t\tif (snippet === (snippet = get_snippet())) return;\n\n\t\tif (snippet_effect) {\n\t\t\tdestroy_effect(snippet_effect);\n\t\t\tsnippet_effect = null;\n\t\t}\n\n\t\tif (DEV && snippet == null) {\n\t\t\te.invalid_snippet();\n\t\t}\n\n\t\tsnippet_effect = branch(() => /** @type {SnippetFn} */ (snippet)(anchor, ...args));\n\t}, EFFECT_TRANSPARENT);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * In development, wrap the snippet function so that it passes validation, and so that the\n * correct component context is set for ownership checks\n * @param {any} component\n * @param {(node: TemplateNode, ...args: any[]) => void} fn\n */\nexport function wrap_snippet(component, fn) {\n\treturn (/** @type {TemplateNode} */ node, /** @type {any[]} */ ...args) => {\n\t\tvar previous_component_function = dev_current_component_function;\n\t\tset_dev_current_component_function(component);\n\n\t\ttry {\n\t\t\treturn fn(node, ...args);\n\t\t} finally {\n\t\t\tset_dev_current_component_function(previous_component_function);\n\t\t}\n\t};\n}\n\n/**\n * Create a snippet programmatically\n * @template {unknown[]} Params\n * @param {(...params: Getters<Params>) => {\n *   render: () => string\n *   setup?: (element: Element) => void | (() => void)\n * }} fn\n * @returns {Snippet<Params>}\n */\nexport function createRawSnippet(fn) {\n\t// @ts-expect-error the types are a lie\n\treturn (/** @type {TemplateNode} */ anchor, /** @type {Getters<Params>} */ ...params) => {\n\t\tvar snippet = fn(...params);\n\n\t\t/** @type {Element} */\n\t\tvar element;\n\n\t\tif (hydrating) {\n\t\t\telement = /** @type {Element} */ (hydrate_node);\n\t\t\thydrate_next();\n\t\t} else {\n\t\t\tvar html = snippet.render().trim();\n\t\t\tvar fragment = create_fragment_from_html(html);\n\t\t\telement = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (DEV && (get_next_sibling(element) !== null || element.nodeType !== 1)) {\n\t\t\t\tw.invalid_raw_snippet_render();\n\t\t\t}\n\n\t\t\tanchor.before(element);\n\t\t}\n\n\t\tconst result = snippet.setup?.(element);\n\t\tassign_nodes(element, element);\n\n\t\tif (typeof result === 'function') {\n\t\t\tteardown(result);\n\t\t}\n\t};\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { FILENAME, NAMESPACE_SVG } from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { create_text, get_first_child } from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { set_should_intro } from '../../render.js';\nimport { current_each_item, set_current_each_item } from './each.js';\nimport { active_effect } from '../../runtime.js';\nimport { component_context } from '../../context.js';\nimport { DEV } from 'esm-env';\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport { assign_nodes } from '../template.js';\nimport { is_raw_text_element } from '../../../../utils.js';\n\n/**\n * @param {Comment | Element} node\n * @param {() => string} get_tag\n * @param {boolean} is_svg\n * @param {undefined | ((element: Element, anchor: Node | null) => void)} render_fn,\n * @param {undefined | (() => string)} get_namespace\n * @param {undefined | [number, number]} location\n * @returns {void}\n */\nexport function element(node, get_tag, is_svg, render_fn, get_namespace, location) {\n\tlet was_hydrating = hydrating;\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar filename = DEV && location && component_context?.function[FILENAME];\n\n\t/** @type {string | null} */\n\tvar tag;\n\n\t/** @type {string | null} */\n\tvar current_tag;\n\n\t/** @type {null | Element} */\n\tvar element = null;\n\n\tif (hydrating && hydrate_node.nodeType === 1) {\n\t\telement = /** @type {Element} */ (hydrate_node);\n\t\thydrate_next();\n\t}\n\n\tvar anchor = /** @type {TemplateNode} */ (hydrating ? hydrate_node : node);\n\n\t/** @type {Effect | null} */\n\tvar effect;\n\n\t/**\n\t * The keyed `{#each ...}` item block, if any, that this element is inside.\n\t * We track this so we can set it when changing the element, allowing any\n\t * `animate:` directive to bind itself to the correct block\n\t */\n\tvar each_item_block = current_each_item;\n\n\tblock(() => {\n\t\tconst next_tag = get_tag() || null;\n\t\tvar ns = get_namespace ? get_namespace() : is_svg || next_tag === 'svg' ? NAMESPACE_SVG : null;\n\n\t\t// Assumption: Noone changes the namespace but not the tag (what would that even mean?)\n\t\tif (next_tag === tag) return;\n\n\t\t// See explanation of `each_item_block` above\n\t\tvar previous_each_item = current_each_item;\n\t\tset_current_each_item(each_item_block);\n\n\t\tif (effect) {\n\t\t\tif (next_tag === null) {\n\t\t\t\t// start outro\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\teffect = null;\n\t\t\t\t\tcurrent_tag = null;\n\t\t\t\t});\n\t\t\t} else if (next_tag === current_tag) {\n\t\t\t\t// same tag as is currently rendered — abort outro\n\t\t\t\tresume_effect(effect);\n\t\t\t} else {\n\t\t\t\t// tag is changing — destroy immediately, render contents without intro transitions\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tset_should_intro(false);\n\t\t\t}\n\t\t}\n\n\t\tif (next_tag && next_tag !== current_tag) {\n\t\t\teffect = branch(() => {\n\t\t\t\telement = hydrating\n\t\t\t\t\t? /** @type {Element} */ (element)\n\t\t\t\t\t: ns\n\t\t\t\t\t\t? document.createElementNS(ns, next_tag)\n\t\t\t\t\t\t: document.createElement(next_tag);\n\n\t\t\t\tif (DEV && location) {\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\telement.__svelte_meta = {\n\t\t\t\t\t\tloc: {\n\t\t\t\t\t\t\tfile: filename,\n\t\t\t\t\t\t\tline: location[0],\n\t\t\t\t\t\t\tcolumn: location[1]\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tassign_nodes(element, element);\n\n\t\t\t\tif (render_fn) {\n\t\t\t\t\tif (hydrating && is_raw_text_element(next_tag)) {\n\t\t\t\t\t\t// prevent hydration glitches\n\t\t\t\t\t\telement.append(document.createComment(''));\n\t\t\t\t\t}\n\n\t\t\t\t\t// If hydrating, use the existing ssr comment as the anchor so that the\n\t\t\t\t\t// inner open and close methods can pick up the existing nodes correctly\n\t\t\t\t\tvar child_anchor = /** @type {TemplateNode} */ (\n\t\t\t\t\t\thydrating ? get_first_child(element) : element.appendChild(create_text())\n\t\t\t\t\t);\n\n\t\t\t\t\tif (hydrating) {\n\t\t\t\t\t\tif (child_anchor === null) {\n\t\t\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tset_hydrate_node(child_anchor);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// `child_anchor` is undefined if this is a void element, but we still\n\t\t\t\t\t// need to call `render_fn` in order to run actions etc. If the element\n\t\t\t\t\t// contains children, it's a user error (which is warned on elsewhere)\n\t\t\t\t\t// and the DOM will be silently discarded\n\t\t\t\t\trender_fn(element, child_anchor);\n\t\t\t\t}\n\n\t\t\t\t// we do this after calling `render_fn` so that child effects don't override `nodes.end`\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = element;\n\n\t\t\t\tanchor.before(element);\n\t\t\t});\n\t\t}\n\n\t\ttag = next_tag;\n\t\tif (tag) current_tag = tag;\n\t\tset_should_intro(true);\n\n\t\tset_current_each_item(previous_each_item);\n\t}, EFFECT_TRANSPARENT);\n\n\tif (was_hydrating) {\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(anchor);\n\t}\n}\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean) || (value === '' && name === 'class')) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n","import { DEV } from 'esm-env';\nimport { hydrating, set_hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { clsx } from '../../../shared/attributes.js';\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when it's `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value ?? '';\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'style' && '__styles' in element) {\n\t\t// reset styles to force style: directive to update\n\t\telement.__styles = {};\n\t}\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet was_hydrating = hydrating;\n\tif (hydrating) {\n\t\tset_hydrating(false);\n\t}\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\tif (\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\tsetters_cache.has(node.nodeName) ||\n\t\t\t// customElements may not be available in browser extension contexts\n\t\t\t!customElements ||\n\t\t\tcustomElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object'\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t}\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string, any> | undefined} prev\n * @param {Record<string, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [preserve_attribute_case]\n * @param {boolean} [is_custom_element]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(\n\telement,\n\tprev,\n\tnext,\n\tcss_hash,\n\tpreserve_attribute_case = false,\n\tis_custom_element = false,\n\tskip_warning = false\n) {\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet is_hydrating_custom_element = hydrating && is_custom_element;\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(false);\n\t}\n\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (next.class) {\n\t\tnext.class = clsx(next.class);\n\t}\n\n\tif (css_hash !== undefined) {\n\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// @ts-expect-error\n\tvar attributes = /** @type {Record<string, unknown>} **/ (element.__attributes ??= {});\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style' && value != null) {\n\t\t\telement.style.cssText = value + '';\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (!is_custom_element && (key === '__value' || (key === 'value' && value != null))) {\n\t\t\t// @ts-ignore We're not running this for custom elements because __value is actually\n\t\t\t// how Lit stores the current value on the element, and messing with that would break things.\n\t\t\telement.value = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked — preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\t\t\t\t\tconst use_default = prev === undefined;\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet previous = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = previous;\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tinput.value = input.__value = use_default ? previous : null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet previous = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = previous;\n\t\t\t\t\t\tinput.checked = use_default ? previous : false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tset_attribute(element, name, value);\n\t\t\t}\n\t\t}\n\t\tif (key === 'style' && '__styles' in element) {\n\t\t\t// reset styles to force style: directive to update\n\t\t\telement.__styles = {};\n\t\t}\n\t}\n\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(true);\n\t}\n\n\treturn current;\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n","import { hydrating } from '../hydration.js';\n\n/**\n * @param {SVGElement} dom\n * @param {string} value\n * @param {string} [hash]\n * @returns {void}\n */\nexport function set_svg_class(dom, value, hash) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value, hash);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {MathMLElement} dom\n * @param {string} value\n * @param {string} [hash]\n * @returns {void}\n */\nexport function set_mathml_class(dom, value, hash) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value, hash);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {HTMLElement} dom\n * @param {string} value\n * @param {string} [hash]\n * @returns {void}\n */\nexport function set_class(dom, value, hash) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value, hash);\n\n\tif (hydrating && dom.className === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.className !== next_class_name)\n\t) {\n\t\t// Removing the attribute when the value is only an empty string causes\n\t\t// peformance issues vs simply making the className an empty string. So\n\t\t// we should only remove the class if the the value is nullish.\n\t\tif (value == null && !hash) {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.className = next_class_name;\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {string} [hash]\n * @returns {string | V}\n */\nfunction to_class(value, hash) {\n\treturn (value == null ? '' : value) + (hash ? ' ' + hash : '');\n}\n\n/**\n * @param {Element} dom\n * @param {string} class_name\n * @param {boolean} value\n * @returns {void}\n */\nexport function toggle_class(dom, class_name, value) {\n\tif (value) {\n\t\tif (dom.classList.contains(class_name)) return;\n\t\tdom.classList.add(class_name);\n\t} else {\n\t\tif (!dom.classList.contains(class_name)) return;\n\t\tdom.classList.remove(class_name);\n\t}\n}\n","/** @import { ComponentContextLegacy } from '#client' */\nimport { run, run_all } from '../../../shared/utils.js';\nimport { component_context } from '../../context.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\nimport { deep_read_state, get, untrack } from '../../runtime.js';\n\n/**\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\n * @param {boolean} [immutable]\n */\nexport function init(immutable = false) {\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\tconst callbacks = context.l.u;\n\tif (!callbacks) return;\n\n\tlet props = () => deep_read_state(context.s);\n\n\tif (immutable) {\n\t\tlet version = 0;\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\n\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\n\t\tconst d = derived(() => {\n\t\t\tlet changed = false;\n\t\t\tconst props = context.s;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (props[key] !== prev[key]) {\n\t\t\t\t\tprev[key] = props[key];\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) version++;\n\t\t\treturn version;\n\t\t});\n\n\t\tprops = () => get(d);\n\t}\n\n\t// beforeUpdate\n\tif (callbacks.b.length) {\n\t\tuser_pre_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.b);\n\t\t});\n\t}\n\n\t// onMount (must run before afterUpdate)\n\tuser_effect(() => {\n\t\tconst fns = untrack(() => callbacks.m.map(run));\n\t\treturn () => {\n\t\t\tfor (const fn of fns) {\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\t// afterUpdate\n\tif (callbacks.a.length) {\n\t\tuser_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.a);\n\t\t});\n\t}\n}\n\n/**\n * Invoke the getter of all signals associated with a component\n * so they can be registered to the effect this function is called in.\n * @param {ComponentContextLegacy} context\n * @param {(() => void)} props\n */\nfunction observe_all(context, props) {\n\tif (context.l.s) {\n\t\tfor (const signal of context.l.s) get(signal);\n\t}\n\n\tprops();\n}\n","import { set, source } from '../../reactivity/sources.js';\nimport { get } from '../../runtime.js';\nimport { is_array } from '../../../shared/utils.js';\n\n/**\n * Under some circumstances, imports may be reactive in legacy mode. In that case,\n * they should be using `reactive_import` as part of the transformation\n * @param {() => any} fn\n */\nexport function reactive_import(fn) {\n\tvar s = source(0);\n\n\treturn function () {\n\t\tif (arguments.length === 1) {\n\t\t\tset(s, get(s) + 1);\n\t\t\treturn arguments[0];\n\t\t} else {\n\t\t\tget(s);\n\t\t\treturn fn();\n\t\t}\n\t};\n}\n\n/**\n * @this {any}\n * @param {Record<string, unknown>} $$props\n * @param {Event} event\n * @returns {void}\n */\nexport function bubble_event($$props, event) {\n\tvar events = /** @type {Record<string, Function[] | Function>} */ ($$props.$$events)?.[\n\t\tevent.type\n\t];\n\n\tvar callbacks = is_array(events) ? events.slice() : events == null ? [] : [events];\n\n\tfor (var fn of callbacks) {\n\t\t// Preserve \"this\" context\n\t\tfn.call(this, event);\n\t}\n}\n\n/**\n * Used to simulate `$on` on a component instance when `compatibility.componentApi === 4`\n * @param {Record<string, any>} $$props\n * @param {string} event_name\n * @param {Function} event_callback\n */\nexport function add_legacy_event_listener($$props, event_name, event_callback) {\n\t$$props.$$events ||= {};\n\t$$props.$$events[event_name] ||= [];\n\t$$props.$$events[event_name].push(event_callback);\n}\n\n/**\n * Used to simulate `$set` on a component instance when `compatibility.componentApi === 4`.\n * Needs component accessors so that it can call the setter of the prop. Therefore doesn't\n * work for updating props in `$$props` or `$$restProps`.\n * @this {Record<string, any>}\n * @param {Record<string, any>} $$new_props\n */\nexport function update_legacy_props($$new_props) {\n\tfor (var key in $$new_props) {\n\t\tif (key in this) {\n\t\t\tthis[key] = $$new_props[key];\n\t\t}\n\t}\n}\n","/** @import { Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source, update } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport {\n\tactive_effect,\n\tget,\n\tcaptured_signals,\n\tset_active_effect,\n\tuntrack,\n\tactive_reaction,\n\tset_active_reaction\n} from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport {\n\tBRANCH_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tLEGACY_PROPS,\n\tROOT_EFFECT,\n\tSTATE_SYMBOL\n} from '../constants.js';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\t(bindable &&\n\t\t\t(get_descriptor(props, key)?.set ??\n\t\t\t\t(is_entry_props && key in props && ((v) => (props[key] = v))))) ||\n\t\tundefined;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = (immutable ? derived : derived_safe_equal)(\n\t\t\t() => /** @type {V} */ (props[key])\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = derived(() => {\n\t\tvar parent_value = getter();\n\t\tvar child_value = get(inner_current_value);\n\n\t\tif (from_child) {\n\t\t\tfrom_child = false;\n\t\t\twas_from_child = true;\n\t\t\treturn child_value;\n\t\t}\n\n\t\twas_from_child = false;\n\t\treturn (inner_current_value.v = parent_value);\n\t});\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t\treturn get(current_value);\n\t};\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.20.0';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte ||= { v: new Set() }).v.add(PUBLIC_VERSION);\n","import { on } from \"svelte/events\"\nimport type { Loadable, ResumeData, Theme } from \"./types/global\"\n\nconst jsonFetcher = async <T>(dataPath: string): Promise<T> => {\n  return fetch(dataPath).then((res) => res.json())\n}\n\n/**\n * Resume Data\n */\nconst createResumeStore = () => {\n  const content = $state<Loadable<ResumeData>>({\n    isLoading: true,\n    data: undefined\n  })\n\n  jsonFetcher<ResumeData>(\"data/content-en_US.json\").then((res) => {\n    content.isLoading = false\n    content.data = res\n  })\n    .catch((err) => {\n      content.isLoading = false\n      content.data = undefined\n      content.error = \"There was an error loading the resume content. Check the console for more information.\"\n      console.log(err)\n    })\n\n  return {\n    get value() {\n      return content\n    }\n  }\n}\n\nexport const content = createResumeStore()\n\n/**\n * Color Theme\n */\nconst storedTheme = localStorage.getItem(\"theme\") as Theme\nconst browserThemePreference = window.matchMedia(\"(prefers-color-scheme: dark)\")\nconst startingTheme = storedTheme || (browserThemePreference.matches ? \"dark\" : \"light\")\n\nconst createThemeStore = (initialValue: \"light\" | \"dark\") => {\n  let theme = $state(initialValue)\n\n  return {\n    get value() {\n      return theme\n    },\n    set value(value) {\n      theme = value\n      localStorage.setItem(\"theme\", theme)\n    }\n  }\n}\n\nexport const theme = createThemeStore(storedTheme || startingTheme)\n\n// Handle the browser preferences changing\non(browserThemePreference, \"change\", (e) => {\n  /**\n   * The media query above is specifically for dark mode, \n   * so `e.matches` here is \"dark mode === true\"\n   */\n  theme.value = e.matches ? \"dark\" : \"light\"\n})","<script lang=\"ts\">\n  import type { ContactMethods, Name } from \"../types/global\"\n\n  const { \n    name, \n    contact, \n    isLoading \n  }: {\n    name: Name\n    contact: ContactMethods | undefined\n    isLoading: boolean\n  } = $props()\n</script>\n\n{#if !isLoading}\n  <header>\n    <div class=\"vcard\">\n      <h1>\n        <span class=\"given-name\">{name.firstName}</span>\n        {#if name.nickName}\n          <span class=\"quote\">“</span><span class=\"nickname\"\n            >{name.nickName}</span\n          ><span class=\"quote\">”</span>\n        {/if}\n        <span class=\"family-name\">{name.lastName}</span>\n      </h1>\n      {#if name.tagline}\n        <h2 class=\"tagline\" data-tagline={name.tagline}>{name.tagline}</h2>\n      {/if}\n      {#if name.title}\n        <h2 class=\"title\">{name.title}</h2>\n      {/if}\n      {#if contact}\n        <div class=\"contact\">\n          {#if contact.address}\n            <p class=\"adr\">\n              {#if contact.address.streetAddress}\n                <span class=\"street-address\"\n                  >{contact.address.streetAddress}</span\n                ><br />\n              {/if}\n              {#if contact.address.locality && contact.address.region}\n                <span>\n                  <span class=\"locality\">{contact.address.locality}</span>,\n                  <span class=\"region\">{contact.address.region}</span>\n                </span><br />\n              {/if}\n              {#if contact.address.postalCode && contact.address.countryName}\n                <span>\n                  <span class=\"postal-code\">{contact.address.postalCode}</span>,\n                  <span class=\"country-name\">{contact.address.countryName}</span>\n                </span>\n              {/if}\n            </p>\n          {/if}\n          {#if contact.methods}\n            <div class=\"contact-methods\">\n              {#if contact.methods.telE164}\n                <p>\n                  <a class=\"tel\" href=\"tel:{contact.methods.telE164}\"\n                    >{contact.methods.telFormatted}</a\n                  >\n                </p>\n              {/if}\n              {#if contact.methods.url}\n                <p>\n                  <a\n                    class=\"url org\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                    href={contact.methods.url}\n                  >\n                    {contact.methods.url}\n                  </a>\n                </p>\n              {/if}\n              {#if contact.methods.email}\n                <p>\n                  <a class=\"email\" href=\"mailto:{contact.methods.email}\"\n                    >{contact.methods.email}</a\n                  >\n                </p>\n              {/if}\n            </div>\n          {/if}\n        </div>\n      {/if}\n    </div>\n  </header>\n{/if}\n\n<style lang=\"scss\">\n  @use \"../style/mixins\";\n\n  header {\n    h1,\n    h2 {\n      margin: 0;\n      padding: 0;\n      line-height: 1.1;\n    }\n\n    h1 {\n      font-size: 1.8em;\n    }\n\n    .tagline {\n      color: var(--color-orange);\n      font-size: 3.4em;\n      text-shadow: 1px 1px 0 black;\n    }\n\n    h2.title {\n      font-size: 1.4em;\n      margin-top: 0.25em;\n\n      @include mixins.media(md-screen) {\n        font-size: 2em;\n      }\n    }\n\n    .quote {\n      color: var(--color-orange);\n    }\n\n    .contact {\n      margin-left: 1.5em;\n    }\n\n    @include mixins.media(md-screen) {\n      text-align: center;\n\n      .contact {\n        margin-left: 0;\n      }\n    }\n\n    .vcard {\n      .contact-methods {\n        p {\n          margin-top: 0;\n          margin-bottom: 0;\n        }\n      }\n    }\n  }\n</style>\n","import stringsData from \"../data/strings-en_US.json\"\n\nconst uiStrings: {[key: string]: string} = stringsData\n\nconst _ = (key: string, _default: string = \"\"): string => {\n  // return uiStrings.hasOwnProperty(key) ? uiStrings[key] : _default\n  return Object.prototype.hasOwnProperty.call(uiStrings, key) ? uiStrings[key] : _default\n}\n\nexport default _\n","<script lang=\"ts\">\n  /* eslint-disable svelte/no-at-html-tags */\n  const { \n    text,\n    className = \"\"\n  }: {\n    text: string[]\n    className?: string\n  } = $props()\n</script>\n\n{#each text as line}\n  <p class={className}>{@html line}</p>\n{/each}\n","<script lang=\"ts\">\n  import type { StartEndDate } from \"../types/global\"\n\n  const { date }: {\n     date: StartEndDate\n  } = $props()\n\n  const hasMonth = date.month && date.month > 0 && date.month <= 12\n  const _formatter = new Intl.DateTimeFormat(\"en\", { month: \"short\"})\n  const _date = new Date(\n    date.year as number,\n    (date.month && hasMonth ? date.month - 1 : 1) as number\n  )\n\n  const year = _date.getFullYear()\n  const month = _formatter.format(_date)\n</script>\n\n{#if hasMonth}{month}&nbsp;{/if}{year}","<script lang=\"ts\">\n  import type { Position } from \"../types/global\"\n  import Text from \"./Text.svelte\"\n  import Date from \"./Date.svelte\"\n  import BulletedHeading from \"./BulletedHeading.svelte\"\n\n  const { position }: {\n    position: Position\n  } = $props()\n\n  let empty = position.description.length < 1\n</script>\n\n\n<BulletedHeading of=\"h3\" class=\"mb-0\">\n  {position.title}\n</BulletedHeading>\n{#if position.from}\n  <h4 class=\"mb-0\">\n    <Date date={position.from} /> – {#if position.to}<Date date={position.to} />{:else}present{/if}\n  </h4>\n{/if}\n{#if !empty}\n  <div>\n    <Text text={position.description} />\n  </div>\n{/if}\n\n<style lang=\"scss\">\n  h4 {\n    font-variant-ligatures: normal;\n    font-style: italic;\n    font-weight: normal;\n    margin-top: 0;\n    line-height: 1em;\n    color: var(--text-color-dark-gray);\n  }\n</style>","<script lang=\"ts\">\n    import type { Patent } from \"../types/global\"\n\n  const { patent }: {\n    patent: Patent\n  } = $props()\n</script>\n\n<h4>{patent.type} {patent.number} - <span>{patent.title}</span></h4>\n<p>{patent.description}</p>\n\n<style lang=\"scss\">\n  h4 {\n    line-height: 1.25rem;\n    font-weight: 700;\n    margin-block: 0.5em;\n\n    span {\n      font-weight: 400;\n    }\n  }\n\n  p {\n    line-height: var(--line-height);\n  }\n</style>","<script lang=\"ts\">\n  /* eslint-disable svelte/no-at-html-tags */\n  import * as icons from \"../icons.json\"\n  import type { IconData } from \"../types/icons\"\n\n  type IconName = keyof typeof icons\n  \n  const { \n    name,\n    width = 16,\n    height = 16,\n    title = undefined,\n    align = \"baseline\"\n  }: {\n    name: IconName\n    width?: number\n    height?: number\n    title?: string | undefined\n    align?: \"baseline\" | \"middle\"\n  } = $props()\n\n  const typedIcons: IconData = icons\n  const icon = typedIcons[name]\n</script>\n\n<svg\n  class=\"icon va-{align}\"\n  role=\"img\"\n  width={width}\n  height={height}\n  viewBox=\"0 0 {icon.viewBox.w} {icon.viewBox.h}\"\n  fill={icon.fill ?? \"none\"}\n  xmlns=\"http://www.w3.org/2000/svg\"\n  ><title>{@html title || icon.title}</title><g>{@html icon.svg}</g></svg\n>\n\n<style lang=\"scss\">\n  .icon {\n    position: relative;\n  }\n\n  :global {\n    .dark .icon {\n      fill: white;\n    }\n  }\n</style>","<script lang=\"ts\">\n  import type { Job } from \"../types/global\"\n  import _ from \"../services/i18n.svelte\"\n  import Position from \"../components/Position.svelte\"\n  import BulletedHeading from \"./BulletedHeading.svelte\"\n  import Patent from \"./Patent.svelte\"\n  import Icon from \"./Icon.svelte\"\n\n  const { job }: {\n    job: Job\n  } = $props()\n</script>\n\n<dt>\n  <span>{job.company}, {job.location}</span>{#if job.url}\n  <a class=\"icon\" href=\"{job.url}\" title=\"{job.company}\" target=\"_blank\"><span class=\"sr-only\" hidden>{job.company} website</span><Icon name=\"link\" title={job.company} /></a>{/if}\n</dt>\n{#each job.positions as position (position.title)}\n  {#if position.from}\n    <dd>\n      <Position {position} />\n    </dd>\n  {/if}\n{/each}\n{#if job.patents}\n  <dd class=\"patents\">\n    <BulletedHeading of=\"h3\" class=\"mb-0\">{_(\"title.patents\", \"Patents\")}</BulletedHeading>\n    <ul>\n      {#each job.patents as patent (patent.number)}\n        <li>\n          <Patent {patent} />\n        </li> \n      {/each}\n    </ul>\n  </dd>\n{/if}\n<style lang=\"scss\">\n  @use \"../style/mixins\";\n\n  dt {\n    margin-top: 1.5em;\n    font-size: 1.25em;\n    font-family: var(--header-font);\n    font-variant-ligatures: normal;\n    font-weight: 900;\n\n    &>span:first-child {\n      text-decoration: underline;\n      text-decoration-thickness: 1px;\n    }\n\n    @include mixins.media(md-screen) {\n      font-size: 1.6em;\n    }\n\n    a {\n      text-decoration: none;\n      padding-left: 0.5em;\n    }\n  }\n\n  dd {\n    margin-left: 1.25em;\n\n    @include mixins.media(sm-screen) {\n      margin-left: 0;\n    }\n\n    &.patents {\n      ul {\n        list-style: disc outside;\n      }\n    }\n  }\n</style>","import { enable_legacy_mode_flag } from './index.js';\n\nenable_legacy_mode_flag();\n","<script lang=\"ts\">\n  import Icon from \"./Icon.svelte\"\n</script>\n\n<p><a class=\"back-to-top\" href=\"#main\" onclick={(e) => {\n  e.preventDefault()\n  e.stopPropagation()\n  window.scrollTo(0, 0) \n}}><Icon name=\"returnArrow\" width={18} height={18} />Back to top</a></p>\n\n<style lang=\"css\">\n  .back-to-top {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n</style>","<script lang=\"ts\">\n  import type { BookSmarts, Job, Objective } from \"../types/global\"\n  import _ from \"../services/i18n.svelte\"\n  import JobDefinition from \"./JobDefinition.svelte\"\n  import Text from \"./Text.svelte\"\n  import Date from \"./Date.svelte\"\n  import BackToTop from \"./BackToTop.svelte\"\n\n  const { \n    objective, \n    currentWork, \n    workHistory, \n    education \n  }: {\n    objective: Objective | undefined\n    currentWork: Job[] | undefined\n    workHistory: Job[] | undefined\n    education: BookSmarts[] | undefined\n  } = $props()\n</script>\n\n{#if objective}\n  <section class=\"me\">\n    <div>\n      <Text text={objective} />\n    </div>\n  </section>\n{/if}\n{#if currentWork}\n  <section class=\"current\">\n    <h2>{_(\"title.current-work\", \"Current Work\")}</h2>\n    <dl>\n      {#each currentWork as currentJob (currentJob.company)}\n        <JobDefinition job={currentJob} />\n      {/each}\n    </dl>\n  </section>\n{/if}\n{#if workHistory}\n  <section class=\"history\">\n    <h2>{_(\"title.work-history\", \"Work History\")}</h2>\n    <dl>\n      {#each workHistory as job (job.company)}\n        {#if !job.hidden}\n        <JobDefinition {job} />\n        {/if}\n      {/each}\n    </dl>\n  </section>\n{/if}\n{#if education}\n  <section class=\"education\">\n    <h2>{_(\"title.education\", \"Education\")}</h2>\n    <ul>\n      {#each education as stint (stint.description)}\n        <li>\n          <b>{stint.description}</b>, <Date date={stint.date} /><br />\n          <i>{stint.institution}</i>\n        </li>\n      {/each}\n    </ul>\n  </section>\n{/if}\n\n<BackToTop />\n\n<style lang=\"scss\">\n  @use \"../style/mixins\";\n\n  section:not(:first-of-type) {\n    margin: 3em 0;\n  }\n\n  // .me {\n  //   h2 {\n  //     margin-bottom: 1em;\n\n  //     @include mixins.media(md-screen, print) {\n  //       margin-bottom: 0.5em;\n  //     }\n  //   }\n  // }\n</style>\n","<script lang=\"ts\">\n  /* eslint-disable svelte/no-at-html-tags */\n  import type { BuzzwordGroup, Link } from \"../types/global\"\n  import Icon from \"./Icon.svelte\"\n  import _ from \"../services/i18n.svelte\"\n\n  const { buzzwordGroups, links }: {\n    buzzwordGroups: BuzzwordGroup[] | undefined\n    links: Link[] | undefined\n  } = $props()\n\n  const docRoot = document.documentElement\n\n  const handleMousemove = (e: MouseEvent) => {\n    docRoot.style.setProperty(\"--mouse-x\", e.clientX.toString())\n    docRoot.style.setProperty(\"--mouse-y\", e.clientY.toString())\n  }\n</script>\n\n<svelte:body onmousemove={handleMousemove} />\n\n{#if buzzwordGroups}\n  <h2>{_(\"title.buzzwords\", \"Buzzwords\")}</h2>\n  {#each buzzwordGroups as buzzwords}\n    <ul class=\"bubbles\">\n      {#each buzzwords as item (item.name)}\n        <li class=\"bubblewrap\">\n          {item.name}\n          <span class=\"bubble f-bi\">{@html item.text}</span>\n        </li>\n      {/each}\n    </ul>\n  {/each}\n{/if}\n{#if links}\n  <ul>\n    {#each links as link (link.href)}\n      <li>\n        <a\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href={link.href}\n        >\n          <span class=\"icon {link.icon}\"><Icon name={link.icon} /></span> {link.text}\n        </a>\n      </li>\n    {/each}\n  </ul>\n{/if}\n\n<style lang=\"scss\">\n  @use \"../style/bubbles.scss\";\n\n  .bubbles {\n    border-bottom: 1px dotted gray;\n\n    li:last-of-type {\n      margin-bottom: 1em;\n    }\n\n    .icon {\n      margin-right: 0.5em;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import Icon from \"./Icon.svelte\"\n  import { theme } from \"../store.svelte\"\n  import type { Theme } from \"../types/global\"\n\n  const setTheme = (value: Theme): undefined => {\n    theme.value = value\n  }\n</script>\n\n{#if theme.value === \"light\"}\n<button onclick={() => setTheme(\"dark\")} aria-label=\"Switch to Dark Theme\">\n  <Icon name=\"sun\" width={20} height={20} align=\"middle\" />\n</button>\n{:else}\n<button onclick={() => setTheme(\"light\")} aria-label=\"Switch to Light Theme\">\n  <Icon name=\"moon\" width={20} height={20} align=\"middle\" />\n</button>\n{/if}\n\n<style lang=\"scss\">\n  button {\n    border: none;\n    background: transparent;\n    cursor: pointer;\n    position: relative;\n    padding: 0;\n  }\n</style>","<script lang=\"ts\">\n  import _ from \"../services/i18n.svelte\"\n  import ThemeSwitcher from \"./ThemeSwitcher.svelte\"\n</script>\n\n<footer>\n    <span>\n      &copy; {_(\"footer.copyright\", \"Me!\")}\n    </span>\n    <span class=\"theme-button\">\n      &nbsp;|&nbsp;\n      <ThemeSwitcher />\n    </span>\n    <span class=\"printed-from\">\n      &nbsp;|&nbsp;\n      Printed from <a href=\"https://gipetto.github.io/resume\">https://gipetto.github.io/resume</a>\n    </span>\n</footer>\n\n<style lang=\"scss\">\n  .printed-from {\n    display: none;\n  }\n</style>","<script lang=\"ts\">\n  import \"./app.scss\"\n  import { content } from \"./store.svelte\"\n  import Header from \"./components/Header.svelte\"\n  import History from \"./components/History.svelte\"\n  import Buzzwords from \"./components/Buzzwords.svelte\"\n  import Footer from \"./components/Footer.svelte\"\n  import { theme } from \"./store.svelte\"\n  import SkipLink from \"./components/SkipLink.svelte\"\n\n  $effect(() => {\n    document.body.classList.remove(\"light\", \"dark\")\n    document.body.classList.add(theme.value === \"dark\" ? \"dark\" : \"light\")\n  })\n</script>\n\n{#if content.value.isLoading === false && content.value.data}\n  <SkipLink />\n  <Header\n    name={content.value.data.name}\n    contact={content.value.data.contact}\n    isLoading={content.value.isLoading}\n  />\n  <section id=\"content\" class=\"content\">\n    <History\n      objective={content.value.data.objective}\n      currentWork={content.value.data.currentWork}\n      workHistory={content.value.data.workHistory}\n      education={content.value.data.education}\n    />\n  </section>\n  <aside>\n    <Buzzwords\n      buzzwordGroups={content.value.data.buzzwords}\n      links={content.value.data.links}\n    />\n  </aside>\n{:else if content.value.isLoading === false && content.value.error}\n  <p>{content.value.error}</p>\n{/if}\n<Footer />\n","import { mount } from \"svelte\"\nimport App from \"./App.svelte\"\n\nconst app = mount(App, {\n  target: document.getElementById(\"main\") ?? document.body,\n  props: {},\n})\n\nexport default app\n"],"names":["DEV","is_array","index_of","array_from","define_property","get_descriptor","get_descriptors","object_prototype","array_prototype","get_prototype_of","noop","run","fn","run_all","arr","i","DERIVED","EFFECT","RENDER_EFFECT","BLOCK_EFFECT","BRANCH_EFFECT","ROOT_EFFECT","BOUNDARY_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_RAN","EFFECT_TRANSPARENT","HEAD_EFFECT","EFFECT_HAS_DERIVED","STATE_SYMBOL","LOADING_ATTR_SYMBOL","equals","value","safe_not_equal","a","b","safe_equals","effect_in_teardown","rune","effect_in_unowned_derived","effect_orphan","effect_update_depth_exceeded","state_descriptors_fixed","state_prototype_fixed","state_unsafe_local_read","state_unsafe_mutation","legacy_mode_flag","tracing_mode_flag","enable_legacy_mode_flag","EACH_ITEM_REACTIVE","EACH_INDEX_REACTIVE","EACH_IS_CONTROLLED","EACH_IS_ANIMATED","EACH_ITEM_IMMUTABLE","TEMPLATE_FRAGMENT","TEMPLATE_USE_IMPORT_NODE","UNINITIALIZED","NAMESPACE_SVG","component_context","set_component_context","context","push","props","runes","source","pop","component","context_stack_item","component_effects","previous_effect","active_effect","previous_reaction","active_reaction","component_effect","set_active_effect","set_active_reaction","effect","is_runes","v","stack","signal","state","push_derived_source","mutable_source","initial_value","immutable","s","_a","untracking","derived_sources","set_derived_sources","set","e.state_unsafe_mutation","internal_set","increment_write_version","mark_reactions","untracked_writes","set_untracked_writes","status","reactions","length","reaction","flags","set_signal_status","schedule_effect","hydrating","proxy","parent","prev","prototype","sources","is_proxied_array","version","metadata","_","prop","descriptor","e.state_descriptors_fixed","target","ls","n","update_version","receiver","exists","get","has","other_s","own_keys","key","e.state_prototype_fixed","d","$window","$document","is_firefox","first_child_getter","next_sibling_getter","init_operations","element_prototype","node_prototype","create_text","get_first_child","node","get_next_sibling","child","is_text","first_child","fragment","first","sibling","count","next_sibling","clear_text_content","derived","parent_derived","derived_safe_equal","destroy_derived_effects","effects","destroy_effect","get_derived_parent_effect","execute_derived","prev_active_effect","update_reaction","update_derived","skip_reaction","validate_effect","e.effect_orphan","e.effect_in_unowned_derived","is_destroying_effect","e.effect_in_teardown","push_effect","parent_effect","parent_last","create_effect","type","sync","is_root","previously_flushing_effect","is_flushing_effect","set_is_flushing_effect","update_effect","e","inert","teardown","user_effect","defer","user_pre_effect","render_effect","component_root","options","fulfil","pause_effect","template_effect","thunks","deriveds","block","branch","execute_effect_teardown","previously_destroying_effect","set_is_destroying_effect","destroy_effect_children","remove_dom","next","destroy_block_effect_children","removed","end","remove_reactions","transitions","transition","unlink_effect","callback","pause_children","run_out_transitions","remaining","check","local","transparent","resume_effect","resume_children","check_dirtiness","is_micro_task_queued","current_queued_micro_tasks","process_micro_tasks","tasks","queue_micro_task","is_throwing_error","last_scheduled_effect","queued_root_effects","flush_count","new_deps","skipped_deps","write_version","read_version","dependencies","is_unowned","dependency","is_disconnected","is_unowned_connected","propagate_error","error","current","should_rethrow_error","handle_error","schedule_possible_effect_self_invalidation","root","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","prev_derived_sources","previous_component_context","previous_untracking","result","deps","remove_reaction","index","new_length","start_index","dep","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","root_effects","collected_effects","process_effects","flush_queued_effects","process_deferred","previous_queued_root_effects","current_effect","main_loop","is_branch","is_skippable_branch","previous_active_reaction","parent_sibling","is_derived","e.state_unsafe_local_read","untrack","STATUS_MASK","deep_read_state","deep_read","visited","proto","descriptors","is_capture_event","name","DELEGATED_EVENTS","is_delegated","event_name","ATTRIBUTE_ALIASES","normalize_attribute","PASSIVE_EVENTS","is_passive_event","autofocus","dom","body","without_reactive_context","all_registered_events","root_event_handles","create_event","handler","target_handler","event","handle_event_propagation","on","element","capture","passive","delegate","events","handler_element","owner_document","path","current_target","path_idx","handled_at","at_idx","handler_idx","throw_error","other_errors","parent_element","delegated","data","create_fragment_from_html","html","elem","assign_nodes","start","template","content","is_fragment","use_import_node","has_start","clone","ns_template","ns","wrapped","text","comment","frag","anchor","append","set_text","str","mount","_mount","document_listeners","Component","intro","registered_events","event_handle","unmount","anchor_node","ctx","mounted_components","if_block","elseif","consequent_effect","alternate_effect","condition","has_branch","set_branch","flag","update_branch","new_condition","pause_effects","items","controlled_anchor","items_map","is_controlled","parent_node","link","item","each","get_collection","get_key","render_fn","fallback_fn","fallback","was_empty","each_array","collection","array","reconcile","is_animated","should_update","seen","to_animate","matched","stashed","child_anchor","create_item","update_item","_b","j","move","to_destroy","destroy_length","_c","_d","reactive","mutable","dest","next_node","get_value","svg","mathml","skip_warning","snippet","get_snippet","args","snippet_effect","get_tag","is_svg","get_namespace","location","tag","current_tag","next_tag","r","f","o","clsx","_clsx","set_selected","selected","set_attribute","attribute","attributes","get_setters","set_attributes","css_hash","preserve_attribute_case","is_custom_element","is_option_element","setters","prev_value","prefix","opts","event_handle_key","handle","evt","is_default","input","use_default","previous","setters_cache","element_proto","set_svg_class","hash","prev_class_name","next_class_name","to_class","set_class","init","callbacks","changed","observe_all","fns","reactive_import","prop_value","fallback_value","fallback_dirty","get_fallback","getter","PUBLIC_VERSION","jsonFetcher","dataPath","res","createResumeStore","err","storedTheme","browserThemePreference","startingTheme","createThemeStore","initialValue","theme","$$render","consequent","consequent_1","consequent_2","$.template_effect","$.set_text","text_5","$$props","consequent_3","text_6","text_7","consequent_4","text_8","text_9","consequent_5","consequent_6","$.set_attribute","text_10","consequent_7","a_1","text_11","consequent_8","a_2","text_12","consequent_9","consequent_10","uiStrings","stringsData","_default","className","line","hasMonth","_formatter","_date","year","month","empty","alternate","width","height","title","align","icon","icons","$.html","node_1","$.each","node_2","position","$.get","ul","patent","on_click","Icon","dl","currentJob","dl_1","job","stint","text_3","text_4","docRoot","handleMousemove","buzzwords","text_1","ul_1","$.set_class","span_1","text_2","setTheme","on_click_1","__1","$$_import_theme","$.derived_safe_equal","$.user_effect","App"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,46]}