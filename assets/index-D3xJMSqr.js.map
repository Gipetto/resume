{"version":3,"file":"index-D3xJMSqr.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/globals.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/spread.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/runtime/store/index.js","../../src/store.ts","../../src/components/Header.svelte","../../src/services/i18n.ts","../../src/components/Text.svelte","../../src/components/Date.svelte","../../src/components/BulletedHeading.svelte","../../src/components/Position.svelte","../../src/components/Patent.svelte","../../src/components/Icon.svelte","../../src/components/JobDefinition.svelte","../../src/components/BackToTop.svelte","../../src/components/History.svelte","../../src/components/Buzzwords.svelte","../../src/components/ThemeSwitcher.svelte","../../src/components/Footer.svelte","../../src/components/SkipLink.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { readable, writable } from \"svelte/store\"\nimport type { Loadable, ResumeData, Theme } from \"./types/global\"\nimport type { Subscriber } from \"svelte/store\"\nimport stringsData from \"./data/strings-en_US.json\"\n\nconst jsonFetcher = async <T>(dataPath: string): Promise<T> => {\n  return fetch(dataPath).then((res) => res.json())\n}\n\n/**\n * Resume Data\n */\nconst getResumeData = (set: Subscriber<Loadable<ResumeData>>): void => {\n  jsonFetcher<ResumeData>(\"data/content-en_US.json\").then((res) => {\n    set({\n      isLoading: false,\n      data: res,\n    })\n  })\n  .catch((err) => {\n    set({\n      isLoading: false,\n      data: undefined,\n      error: \"There was an error loading the resume content. Check the console for more information.\"\n    })\n    console.error(err)\n  })\n}\n\nexport const content = readable<Loadable<ResumeData>>(\n  {\n    isLoading: true,\n    data: undefined,\n  },\n  (set) => {\n    getResumeData(set)    \n    return () => {}\n  }\n)\nexport const strings = readable<{ [key: string]: string }>(stringsData)\n\n/**\n * Color Theme\n */\nconst storedTheme = localStorage.getItem(\"theme\") as Theme\nconst browserThemePreference = window.matchMedia(\"(prefers-color-scheme: dark)\")\nconst startingTheme = storedTheme || (browserThemePreference.matches ? \"dark\" : \"light\")\n\nexport const theme = writable<Theme>(storedTheme || startingTheme)\ntheme.subscribe((value) => localStorage.setItem(\"theme\", value))\n\nbrowserThemePreference.addEventListener(\"change\", (e) => {\n  /**\n   * The media query above is specifically for dark mode, \n   * so `e.matches` here is \"dark mode === true\"\n   */\n  theme.set(e.matches ? \"dark\" : \"light\")\n})","<script lang=\"ts\">\n  import type { ContactMethods, Name } from \"../types/global\"\n\n  export let name: Name\n  export let contact: ContactMethods | undefined\n  export let isLoading: boolean\n</script>\n\n{#if !isLoading}\n  <header>\n    <div class=\"vcard\">\n      <h1>\n        <span class=\"given-name\">{name.firstName}</span>\n        {#if name.nickName}\n          <span class=\"quote\">“</span><span class=\"nickname\"\n            >{name.nickName}</span\n          ><span class=\"quote\">”</span>\n        {/if}\n        <span class=\"family-name\">{name.lastName}</span>\n      </h1>\n      {#if name.tagline}\n        <h2 class=\"tagline\" data-tagline={name.tagline}>{name.tagline}</h2>\n      {/if}\n      {#if name.title}\n        <h2 class=\"title\">{name.title}</h2>\n      {/if}\n      {#if contact}\n        <div class=\"contact\">\n          {#if contact.address}\n            <p class=\"adr\">\n              {#if contact.address.streetAddress}\n                <span class=\"street-address\"\n                  >{contact.address.streetAddress}</span\n                ><br />\n              {/if}\n              {#if contact.address.locality && contact.address.region}\n                <span>\n                  <span class=\"locality\">{contact.address.locality}</span>,\n                  <span class=\"region\">{contact.address.region}</span>\n                </span><br />\n              {/if}\n              {#if contact.address.postalCode && contact.address.countryName}\n                <span>\n                  <span class=\"postal-code\">{contact.address.postalCode}</span>,\n                  <span class=\"country-name\">{contact.address.countryName}</span>\n                </span>\n              {/if}\n            </p>\n          {/if}\n          {#if contact.methods}\n            <div class=\"contact-methods\">\n              {#if contact.methods.telE164}\n                <p>\n                  <a class=\"tel\" href=\"tel:{contact.methods.telE164}\"\n                    >{contact.methods.telFormatted}</a\n                  >\n                </p>\n              {/if}\n              {#if contact.methods.url}\n                <p>\n                  <a\n                    class=\"url org\"\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                    href={contact.methods.url}\n                  >\n                    {contact.methods.url}\n                  </a>\n                </p>\n              {/if}\n              {#if contact.methods.email}\n                <p>\n                  <a class=\"email\" href=\"mailto:{contact.methods.email}\"\n                    >{contact.methods.email}</a\n                  >\n                </p>\n              {/if}\n            </div>\n          {/if}\n        </div>\n      {/if}\n    </div>\n  </header>\n{/if}\n\n<style lang=\"scss\">\n  @import \"../style/mixins\";\n\n  header {\n    h1,\n    h2 {\n      margin: 0;\n      padding: 0;\n      line-height: 1.1;\n    }\n\n    h1 {\n      font-size: 1.8em;\n    }\n\n    .tagline {\n      color: var(--color-orange);\n      font-size: 3.4em;\n      text-shadow: 1px 1px 0 black;\n    }\n\n    h2.title {\n      font-size: 1.4em;\n      margin-top: 0.25em;\n\n      @include media(md-screen) {\n        font-size: 2em;\n      }\n    }\n\n    .quote {\n      color: var(--color-orange);\n    }\n\n    .contact {\n      margin-left: 1.5em;\n    }\n\n    @include media(md-screen) {\n      text-align: center;\n\n      .contact {\n        margin-left: 0;\n      }\n    }\n\n    .vcard {\n      .contact-methods {\n        p {\n          margin-top: 0;\n          margin-bottom: 0;\n        }\n      }\n    }\n  }\n</style>\n","import { strings } from \"../store\"\nimport { get } from \"svelte/store\"\n\nconst uiStrings = get(strings)\n\nconst _ = (key: string, _default: string = \"\"): string => {\n  return uiStrings.hasOwnProperty(key) ? uiStrings[key] : _default\n}\n\nexport default _\n","<script lang=\"ts\">\n  export let text: string[]\n  export let className: string = \"\"\n</script>\n\n{#each text as line}\n  <p class={className}>{@html line}</p>\n{/each}\n","<script lang=\"ts\">\n  import type { StartEndDate } from \"../types/global\"\n\n  export let date: StartEndDate\n\n  const hasMonth = date.month && date.month > 0 && date.month <= 12\n  const _formatter = new Intl.DateTimeFormat(\"en\", { month: \"short\"})\n  const _date = new Date(\n    date.year as number,\n    (date.month && hasMonth ? date.month - 1 : 1) as number\n  )\n\n  const year = _date.getFullYear()\n  const month = _formatter.format(_date)\n</script>\n\n{#if hasMonth}{month} {/if}{year}","<script lang=\"ts\">\n  export let of: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\"\n  let className = \"\"\n  export { className as class }\n</script>\n\n<svelte:element this={of} class={className}><slot/></svelte:element>\n\n<style lang=\"scss\">\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    position: relative;\n    &:before {\n      position: absolute;\n      font-weight: 400;\n      content: \"#\";\n      left: -1.1rem;\n      color: lightgray;\n    }\n  }\n</style>","<script lang=\"ts\">\n  import type { Position } from \"../types/global\"\n  import Text from \"./Text.svelte\"\n  import Date from \"./Date.svelte\"\n    import BulletedHeading from \"./BulletedHeading.svelte\"\n\n  export let position: Position\n  let empty = position.description.length < 1\n</script>\n\n\n<BulletedHeading of=\"h3\" class=\"mb-0\">\n  {position.title}\n</BulletedHeading>\n<h4 class=\"mb-0\">\n  <Date date={position.from} /> – {#if position.to}<Date date={position.to} />{:else}present{/if}\n</h4>\n{#if !empty}\n  <div>\n    <Text text={position.description} />\n  </div>\n{/if}\n\n<style lang=\"scss\">\n  h4 {\n    font-variant-ligatures: normal;\n    font-style: italic;\n    font-weight: normal;\n    margin-top: 0;\n    line-height: 1em;\n    color: var(--text-color-dark-gray);\n  }\n</style>","<script lang=\"ts\">\n  export let patent\n</script>\n\n<h4>{patent.type} {patent.number} - <span>{patent.title}</span></h4>\n<p>{patent.description}</p>\n\n<style lang=\"scss\">\n  h4 {\n    line-height: 1.25rem;\n    font-weight: 700;\n    margin-block: 0.5em;\n\n    span {\n      font-weight: 400;\n    }\n  }\n</style>","<script lang=\"ts\">\n  import * as icons from \"../icons.json\"\n  import type { IconData } from \"../types/icons\"\n\n  type IconName = keyof typeof icons\n  \n  export let name: IconName\n  export let width: number = 16\n  export let height: number = 16\n  export let title: string | undefined = undefined\n\n  const typedIcons: IconData = icons\n  const icon = typedIcons[name]\n</script>\n\n<svg\n  class=\"icon\"\n  role=\"img\"\n  width={width}\n  height={height}\n  viewBox=\"0 0 {icon.viewBox.w} {icon.viewBox.h}\"\n  fill={icon.fill ?? \"none\"}\n  xmlns=\"http://www.w3.org/2000/svg\"\n  ><title>{@html title || icon.title}</title><g>{@html icon.svg}</g></svg\n>\n\n<style lang=\"scss\" global>\n  .dark svg {\n    fill: white;\n  }\n</style>","<script lang=\"ts\">\n  import type { Job } from \"../types/global\"\n  import _ from \"../services/i18n\"\n  import Position from \"../components/Position.svelte\"\n  import BulletedHeading from \"./BulletedHeading.svelte\"\n  import Patent from \"./Patent.svelte\"\n  import Icon from \"./Icon.svelte\"\n\n  export let job: Job\n</script>\n\n<dt>\n  <span>{job.company}, {job.location}</span>{#if job.url}\n  <a class=\"icon\" href=\"{job.url}\" title={job.company} target=\"_blank\"><span class=\"sr-only\" hidden>{job.company} website</span><Icon name=\"link\" title=\"{job.company}\" /></a>{/if}\n</dt>\n{#each job.positions as position (position.title)}\n  {#if position.from}\n    <dd>\n      <Position {position} />\n    </dd>\n  {/if}\n{/each}\n{#if job.patents}\n  <dd class=\"patents\">\n    <BulletedHeading of=\"h3\" class=\"mb-0\">{_(\"title.patents\", \"Patents\")}</BulletedHeading>\n    <ul>\n      {#each job.patents as patent (patent.number)}\n        <li>\n          <Patent {patent} />\n        </li> \n      {/each}\n    </ul>\n  </dd>\n{/if}\n<style lang=\"scss\">\n  @import \"../style/mixins\";\n\n  dt {\n    margin-top: 1.5em;\n    font-size: 1.25em;\n    font-family: var(--header-font);\n    font-variant-ligatures: normal;\n    font-weight: 900;\n\n    &>span:first-child {\n      text-decoration: underline;\n      text-decoration-thickness: 1px;\n    }\n\n    @include media(md-screen) {\n      font-size: 1.6em;\n    }\n\n    a {\n      text-decoration: none;\n      padding-left: 0.5em;\n    }\n  }\n\n  dd {\n    margin-left: 1.25em;\n\n    @include media(sm-screen) {\n      margin-left: 0;\n    }\n\n    &.patents {\n      ul {\n        list-style: disc outside;\n      }\n    }\n  }\n</style>","<script lang=\"ts\">\n  import Icon from \"./Icon.svelte\"\n</script>\n\n<p><a class=\"back-to-top\" href=\"#main\" on:click|preventDefault|stopPropagation={() => { \n  window.scrollTo(0, 0) \n}}><Icon name=\"returnArrow\" width={18} height={18} />Back to top</a></p>\n\n<style lang=\"css\">\n  .back-to-top {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n</style>","<script lang=\"ts\">\n  import type { BookSmarts, Job, Objective } from \"../types/global\"\n  import _ from \"../services/i18n\"\n  import JobDefinition from \"./JobDefinition.svelte\"\n  import Text from \"./Text.svelte\"\n  import Date from \"./Date.svelte\"\n  import BackToTop from \"./BackToTop.svelte\"\n\n  export let objective: Objective | undefined\n  export let currentWork: Job[] | undefined\n  export let workHistory: Job[] | undefined\n  export let education: BookSmarts[] | undefined\n</script>\n\n{#if objective}\n  <section class=\"me\">\n    <div>\n      <Text text={objective} />\n    </div>\n  </section>\n{/if}\n{#if currentWork}\n  <section class=\"current\">\n    <h2>{_(\"title.current-work\", \"Current Work\")}</h2>\n    <dl>\n      {#each currentWork as currentJob (currentJob.company)}\n        <JobDefinition job={currentJob} />\n      {/each}\n    </dl>\n  </section>\n{/if}\n{#if workHistory}\n  <section class=\"history\">\n    <h2>{_(\"title.work-history\", \"Work History\")}</h2>\n    <dl>\n      {#each workHistory as job (job.company)}\n        {#if !job.hidden}\n        <JobDefinition {job} />\n        {/if}\n      {/each}\n    </dl>\n  </section>\n{/if}\n{#if education}\n  <section class=\"education\">\n    <h2>{_(\"title.education\", \"Education\")}</h2>\n    <ul>\n      {#each education as stint (stint.description)}\n        <li>\n          <b>{stint.description}</b>, <Date date={stint.date} /><br />\n          <i>{stint.institution}</i>\n        </li>\n      {/each}\n    </ul>\n  </section>\n{/if}\n\n<BackToTop />\n\n<style lang=\"scss\">\n  @import \"../style/mixins\";\n\n  section:not(:first-of-type) {\n    margin: 3em 0;\n  }\n\n  // .me {\n  //   h2 {\n  //     margin-bottom: 1em;\n\n  //     @include media(md-screen, print) {\n  //       margin-bottom: 0.5em;\n  //     }\n  //   }\n  // }\n</style>\n","<script lang=\"ts\">\n  import type { BuzzwordGroup, Link } from \"../types/global\"\n  import Icon from \"./Icon.svelte\"\n  import _ from \"../services/i18n\"\n  export let buzzwordGroups: BuzzwordGroup[] | undefined\n  export let links: Link[] | undefined\n\n  const docRoot = document.documentElement\n\n  const handleMousemove = (e: MouseEvent) => {\n    docRoot.style.setProperty(\"--mouse-x\", e.clientX.toString())\n    docRoot.style.setProperty(\"--mouse-y\", e.clientY.toString())\n  }\n</script>\n\n<svelte:body on:mousemove={handleMousemove} />\n\n{#if buzzwordGroups}\n  <h2>{_(\"title.buzzwords\", \"Buzzwords\")}</h2>\n  {#each buzzwordGroups as buzzwords}\n    <ul class=\"bubbles\">\n      {#each buzzwords as item (item.name)}\n        <li class=\"bubblewrap\">\n          {item.name}\n          <span class=\"bubble f-bi\">{@html item.text}</span>\n        </li>\n      {/each}\n    </ul>\n  {/each}\n{/if}\n{#if links}\n  <ul>\n    {#each links as link (link.href)}\n      <li>\n        <a\n          class=\"icon {link.icon}\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href={link.href}\n        >\n          <Icon name={link.icon} /><span> </span>{link.text}\n        </a>\n      </li>\n    {/each}\n  </ul>\n{/if}\n\n<style lang=\"scss\">\n  @import \"../style/bubbles.scss\";\n\n  .bubbles {\n    border-bottom: 1px dotted gray;\n\n    li:last-of-type {\n      margin-bottom: 1em;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import Icon from \"./Icon.svelte\"\n  import { theme } from \"../store\"\n  import type { Theme } from \"../types/global\"\n\n  const setTheme = (value: Theme): undefined => {\n    theme.set(value)\n  }\n\n  let selectedTheme: Theme\n\n  theme.subscribe((value) => {\n    selectedTheme = value\n  })\n</script>\n\n{#if selectedTheme === \"light\"}\n<button on:click={() => setTheme(\"dark\")} aria-label=\"Switch to Dark Theme\">\n  <Icon name=\"sun\" width={20} height={20} />\n</button>\n{:else}\n<button on:click={() => setTheme(\"light\")} aria-label=\"Switch to Light Theme\">\n  <Icon name=\"moon\" width={20} height={20} />\n</button>\n{/if}\n\n<style lang=\"scss\">\n  button {\n    border: none;\n    background: transparent;\n    cursor: pointer;\n    position: relative;\n\n    :global(svg) {\n      position: relative;\n      bottom: -4px;\n    }\n  }\n</style>","<script lang=\"ts\">\n  import _ from \"../services/i18n\"\n  import ThemeSwitcher from \"./ThemeSwitcher.svelte\"\n</script>\n\n<footer>\n  <p>\n    &copy; {new Date().getFullYear()} {_(\"footer.copyright\", \"Me!\")}\n    <span class=\"theme-button\">\n      {\" \"}|{\" \"}\n      <ThemeSwitcher />\n    </span>\n    <span class=\"printed-from\">\n      {\" \"}|{\" \"}\n      Printed from <a href=\"https://gipetto.github.io/resume\">https://gipetto.github.io/resume</a>\n    </span>\n  </p>\n</footer>\n\n<style lang=\"scss\">\n  .printed-from {\n    display: none;\n  }\n</style>","<script lang=\"ts\"></script>\n\n<a class=\"skip-link\" href=\"#content\">Skip to content</a>\n\n<style lang=\"css\">\n  .skip-link {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n</style>","<script lang=\"ts\">\n  import { content } from \"./store\"\n  import Header from \"./components/Header.svelte\"\n  import History from \"./components/History.svelte\"\n  import Buzzwords from \"./components/Buzzwords.svelte\"\n  import Footer from \"./components/Footer.svelte\"\n  import { theme } from \"./store\"\n  import SkipLink from \"./components/SkipLink.svelte\"\n\n  let selectedTheme;\n\n  theme.subscribe((value) => {\n    selectedTheme = value\n    document.body.classList.remove(\"light\", \"dark\")\n    document.body.classList.add(selectedTheme === \"dark\" ? \"dark\" : \"light\")\n  })\n</script>\n\n{#if $content.isLoading == false && $content.data}\n  <SkipLink />\n  <Header\n    name={$content.data.name}\n    contact={$content.data.contact}\n    isLoading={$content.isLoading}\n  />\n  <section id=\"content\" class=\"content\">\n    <History\n      objective={$content.data.objective}\n      currentWork={$content.data.currentWork}\n      workHistory={$content.data.workHistory}\n      education={$content.data.education}\n    />\n  </section>\n  <aside>\n    <Buzzwords\n      buzzwordGroups={$content.data.buzzwords}\n      links={$content.data.links}\n    />\n  </aside>\n{:else if $content.isLoading == false && $content.error}\n  <p>{$content.error}</p>\n{/if}\n<Footer />\n\n<style global lang=\"scss\">\n  @import \"./style/layout\";\n  @import \"./style/utility\";\n  @import \"./style/theme\";\n  @import \"./style/print\";\n\n  :root {\n    --font-size: 17px;\n    --line-height: 1.85rem;\n    --header-font: system-ui, sans-serif;\n    --body-font: Charter, 'Bitstream Charter', 'Sitka Text', Cambria, serif;\n  }\n\n  ::selection {\n    background: var(--color-orange);\n    color: #fff;\n    text-shadow: 1px 1px 3px var(--color-dark-orange);\n  }\n\n  * {\n    text-rendering: optimizeLegibility;\n    font-variant-ligatures: common-ligatures;\n    font-variant-numeric: oldstyle-nums stacked-fractions;\n    text-underline-offset: 0.13em;\n    text-decoration-skip-ink: auto;\n  }\n\n  body {\n    font-size: var(--font-size);\n    line-height: var(--line-height);\n    font-family: var(--body-font);\n    color: var(--text-color);\n    background-color: var(--background-color);\n    transition: background-color 0.125s;\n  }\n\n  a {\n    cursor: pointer;\n    color: var(--link-color);\n    text-underline-offset: 0.13em;\n\n    &:hover {\n      text-underline-offset: 0.3em;\n    }\n    &:visited {\n      color: var(--link-color-visited);\n    }\n  }\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    font-family: var(--header-font);\n    font-variant-ligatures: common-ligatures;\n    font-weight: 900;\n  }\n\n  p {\n    margin-block: 0.75em;\n  }\n\n  .content {\n    @include media(md-screen, print) {\n      margin: 5em 0 0 0;\n    }\n\n    ul {\n      padding-left: 1.5em;\n\n      li {\n        line-height: 1.3;\n      }\n    }\n  }\n\n  aside {\n    ul {\n      list-style: none inside;\n      padding: 0;\n\n      li {\n        padding: 0.25em 0;\n      }\n    }\n  }\n\n  svg.icon {\n    margin-right: 10px;\n    vertical-align: baseline;\n  }\n\n  :global(.sr-only) {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border-width: 0;\n  }\n</style>\n","import App from \"./App.svelte\"\n\nconst app = new App({\n  target: document.getElementById(\"main\")!,\n  props: {},\n})\n\nexport default app\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","subscribe","store","callbacks","callback","unsub","get_store_value","value","_","component_subscribe","component","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","null_to_empty","globals","append","target","node","insert","anchor","detach","destroy_each","iterations","detaching","element","name","svg_element","text","data","space","empty","listen","event","handler","options","prevent_default","stop_propagation","attr","attribute","always_set_through_set_attribute","set_attributes","attributes","descriptors","key","set_custom_element_data_map","data_map","set_custom_element_data","prop","lower","set_dynamic_element_data","tag","children","set_data","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","$$","flush_render_callbacks","filtered","targets","c","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","ensure_array_like","array_like_or_iterator","destroy_block","lookup","outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","o","n","old_indexes","new_blocks","new_lookup","deltas","updates","child_ctx","will_move","did_move","new_block","old_block","new_key","old_key","get_spread_update","levels","to_null_out","accounted_for","create_component","mount_component","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","__publicField","type","index","PUBLIC_VERSION","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","jsonFetcher","dataPath","res","getResumeData","err","content","strings","stringsData","storedTheme","browserThemePreference","startingTheme","theme","e","t0_value","t3_value","if_block0","create_if_block_12","if_block1","create_if_block_11","if_block2","create_if_block_10","create_if_block_1","header","div","h1","span0","span1","t0","t3","t1_value","span2","t1","t_value","h2","h2_data_tagline_value","t","create_if_block_6","create_if_block_2","create_if_block_9","create_if_block_8","create_if_block_7","p","span","br","t2","t2_value","create_if_block_5","create_if_block_4","create_if_block_3","create_if_block","$$props","contact","isLoading","uiStrings","get","_default","raw_value","className","if_block","date","hasMonth","_formatter","_date","year","month","svelte_element","svelte_element_data","svelte_element_levels","svelte_element_class_value","create_dynamic_element","of","Date","date_changes","text_1_changes","h4","position","t4_value","t6_value","t4","t6","patent","raw1_value","svg","title_1","g","raw0_value","width","height","title","icon","icons","a_href_value","a_title_value","current","icon_changes","dd","each_value","ul","li","each_value_1","dt","job","section","dl","objective","currentWork","workHistory","education","Icon","a_class_value","buzzwordGroups","links","docRoot","handleMousemove","button","setTheme","selectedTheme","$$invalidate","footer","aside","header_changes","App"],"mappings":"+2BACO,SAASA,GAAO,CAAE,CAWlB,SAASC,GAAOC,EAAKC,EAAK,CAEhC,UAAWC,KAAKD,EAAKD,EAAIE,CAAC,EAAID,EAAIC,CAAC,EACnC,OAA6BF,CAC9B,CAuBO,SAASG,GAAIC,EAAI,CACvB,OAAOA,EAAE,CACV,CAEO,SAASC,IAAe,CAC9B,OAAO,OAAO,OAAO,IAAI,CAC1B,CAMO,SAASC,GAAQC,EAAK,CAC5BA,EAAI,QAAQJ,EAAG,CAChB,CAMO,SAASK,GAAYC,EAAO,CAClC,OAAO,OAAOA,GAAU,UACzB,CAGO,SAASC,EAAeC,EAAGC,EAAG,CACpC,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAMD,GAAK,OAAOA,GAAM,UAAa,OAAOA,GAAM,UAClF,CAsDO,SAASE,GAASC,EAAK,CAC7B,OAAO,OAAO,KAAKA,CAAG,EAAE,SAAW,CACpC,CASO,SAASC,GAAUC,KAAUC,EAAW,CAC9C,GAAID,GAAS,KAAM,CAClB,UAAWE,KAAYD,EACtBC,EAAS,MAAS,EAEnB,OAAOpB,CACP,CACD,MAAMqB,EAAQH,EAAM,UAAU,GAAGC,CAAS,EAC1C,OAAOE,EAAM,YAAc,IAAMA,EAAM,YAAW,EAAKA,CACxD,CAUO,SAASC,GAAgBJ,EAAO,CACtC,IAAIK,EACJ,OAAAN,GAAUC,EAAQM,GAAOD,EAAQC,CAAE,IAC5BD,CACR,CAGO,SAASE,GAAoBC,EAAWR,EAAOE,EAAU,CAC/DM,EAAU,GAAG,WAAW,KAAKT,GAAUC,EAAOE,CAAQ,CAAC,CACxD,CAEO,SAASO,GAAYC,EAAYC,EAAKC,EAASxB,EAAI,CACzD,GAAIsB,EAAY,CACf,MAAMG,EAAWC,GAAiBJ,EAAYC,EAAKC,EAASxB,CAAE,EAC9D,OAAOsB,EAAW,CAAC,EAAEG,CAAQ,CAC7B,CACF,CAEA,SAASC,GAAiBJ,EAAYC,EAAKC,EAASxB,EAAI,CACvD,OAAOsB,EAAW,CAAC,GAAKtB,EAAKL,GAAO6B,EAAQ,IAAI,MAAK,EAAIF,EAAW,CAAC,EAAEtB,EAAGuB,CAAG,CAAC,CAAC,EAAIC,EAAQ,GAC5F,CAEO,SAASG,GAAiBL,EAAYE,EAASI,EAAO5B,EAAI,CAChE,GAAIsB,EAAW,CAAC,GAAKtB,EAAI,CACxB,MAAM6B,EAAOP,EAAW,CAAC,EAAEtB,EAAG4B,CAAK,CAAC,EACpC,GAAIJ,EAAQ,QAAU,OACrB,OAAOK,EAER,GAAI,OAAOA,GAAS,SAAU,CAC7B,MAAMC,EAAS,CAAA,EACTC,EAAM,KAAK,IAAIP,EAAQ,MAAM,OAAQK,EAAK,MAAM,EACtD,QAASG,EAAI,EAAGA,EAAID,EAAKC,GAAK,EAC7BF,EAAOE,CAAC,EAAIR,EAAQ,MAAMQ,CAAC,EAAIH,EAAKG,CAAC,EAEtC,OAAOF,CACP,CACD,OAAON,EAAQ,MAAQK,CACvB,CACD,OAAOL,EAAQ,KAChB,CAGO,SAASS,GACfC,EACAC,EACAZ,EACAC,EACAY,EACAC,EACC,CACD,GAAID,EAAc,CACjB,MAAME,EAAeZ,GAAiBS,EAAiBZ,EAAKC,EAASa,CAAmB,EACxFH,EAAK,EAAEI,EAAcF,CAAY,CACjC,CACF,CAiBO,SAASG,GAAyBf,EAAS,CACjD,GAAIA,EAAQ,IAAI,OAAS,GAAI,CAC5B,MAAMI,EAAQ,CAAA,EACRY,EAAShB,EAAQ,IAAI,OAAS,GACpC,QAASQ,EAAI,EAAGA,EAAIQ,EAAQR,IAC3BJ,EAAMI,CAAC,EAAI,GAEZ,OAAOJ,CACP,CACD,MAAO,EACR,CAoCO,SAASa,GAAcxB,EAAO,CACpC,OAAOA,GAAgB,EACxB,CC5QO,MAAMyB,GACZ,OAAO,OAAW,IACf,OACA,OAAO,WAAe,IACtB,WAEA,OCuIG,SAASC,EAAOC,EAAQC,EAAM,CACpCD,EAAO,YAAYC,CAAI,CACxB,CA8FO,SAASC,EAAOF,EAAQC,EAAME,EAAQ,CAC5CH,EAAO,aAAaC,EAAME,GAAU,IAAI,CACzC,CAoBO,SAASC,EAAOH,EAAM,CACxBA,EAAK,YACRA,EAAK,WAAW,YAAYA,CAAI,CAElC,CAIO,SAASI,GAAaC,EAAYC,EAAW,CACnD,QAASnB,EAAI,EAAGA,EAAIkB,EAAW,OAAQlB,GAAK,EACvCkB,EAAWlB,CAAC,GAAGkB,EAAWlB,CAAC,EAAE,EAAEmB,CAAS,CAE9C,CAOO,SAASC,EAAQC,EAAM,CAC7B,OAAO,SAAS,cAAcA,CAAI,CACnC,CAuCO,SAASC,GAAYD,EAAM,CACjC,OAAO,SAAS,gBAAgB,6BAA8BA,CAAI,CACnE,CAMO,SAASE,EAAKC,EAAM,CAC1B,OAAO,SAAS,eAAeA,CAAI,CACpC,CAIO,SAASC,GAAQ,CACvB,OAAOF,EAAK,GAAG,CAChB,CAIO,SAASG,GAAQ,CACvB,OAAOH,EAAK,EAAE,CACf,CAiBO,SAASI,GAAOd,EAAMe,EAAOC,EAASC,EAAS,CACrD,OAAAjB,EAAK,iBAAiBe,EAAOC,EAASC,CAAO,EACtC,IAAMjB,EAAK,oBAAoBe,EAAOC,EAASC,CAAO,CAC9D,CAIO,SAASC,GAAgB/D,EAAI,CACnC,OAAO,SAAU4D,EAAO,CACvB,OAAAA,EAAM,eAAc,EAEb5D,EAAG,KAAK,KAAM4D,CAAK,CAC5B,CACA,CAIO,SAASI,GAAiBhE,EAAI,CACpC,OAAO,SAAU4D,EAAO,CACvB,OAAAA,EAAM,gBAAe,EAEd5D,EAAG,KAAK,KAAM4D,CAAK,CAC5B,CACA,CAoCO,SAASK,EAAKpB,EAAMqB,EAAWjD,EAAO,CACxCA,GAAS,KAAM4B,EAAK,gBAAgBqB,CAAS,EACxCrB,EAAK,aAAaqB,CAAS,IAAMjD,GAAO4B,EAAK,aAAaqB,EAAWjD,CAAK,CACpF,CAQA,MAAMkD,GAAmC,CAAC,QAAS,QAAQ,EAOpD,SAASC,GAAevB,EAAMwB,EAAY,CAEhD,MAAMC,EAAc,OAAO,0BAA0BzB,EAAK,SAAS,EACnE,UAAW0B,KAAOF,EACbA,EAAWE,CAAG,GAAK,KACtB1B,EAAK,gBAAgB0B,CAAG,EACdA,IAAQ,QAClB1B,EAAK,MAAM,QAAUwB,EAAWE,CAAG,EACzBA,IAAQ,UACE1B,EAAM,MAAQA,EAAK0B,CAAG,EAAIF,EAAWE,CAAG,EAE5DD,EAAYC,CAAG,GACfD,EAAYC,CAAG,EAAE,KACjBJ,GAAiC,QAAQI,CAAG,IAAM,GAElD1B,EAAK0B,CAAG,EAAIF,EAAWE,CAAG,EAE1BN,EAAKpB,EAAM0B,EAAKF,EAAWE,CAAG,CAAC,CAGlC,CAiBO,SAASC,GAA4B3B,EAAM4B,EAAU,CAC3D,OAAO,KAAKA,CAAQ,EAAE,QAASF,GAAQ,CACtCG,GAAwB7B,EAAM0B,EAAKE,EAASF,CAAG,CAAC,CAClD,CAAE,CACF,CAIO,SAASG,GAAwB7B,EAAM8B,EAAM1D,EAAO,CAC1D,MAAM2D,EAAQD,EAAK,cACfC,KAAS/B,EACZA,EAAK+B,CAAK,EAAI,OAAO/B,EAAK+B,CAAK,GAAM,WAAa3D,IAAU,GAAK,GAAOA,EAC9D0D,KAAQ9B,EAClBA,EAAK8B,CAAI,EAAI,OAAO9B,EAAK8B,CAAI,GAAM,WAAa1D,IAAU,GAAK,GAAOA,EAEtEgD,EAAKpB,EAAM8B,EAAM1D,CAAK,CAExB,CAKO,SAAS4D,GAAyBC,EAAK,CAC7C,MAAO,IAAI,KAAKA,CAAG,EAAIN,GAA8BJ,EACtD,CAoHO,SAASW,GAAS3B,EAAS,CACjC,OAAO,MAAM,KAAKA,EAAQ,UAAU,CACrC,CAiNO,SAAS4B,EAASzB,EAAMC,EAAM,CACpCA,EAAO,GAAKA,EACRD,EAAK,OAASC,IAClBD,EAAK,KAA8BC,EACpC,CC1zBO,IAAIyB,GAGJ,SAASC,GAAsB9D,EAAW,CAChD6D,GAAoB7D,CACrB,CCJO,MAAM+D,EAAmB,CAAA,EAEnBC,GAAoB,CAAA,EAEjC,IAAIC,EAAmB,CAAA,EAEvB,MAAMC,GAAkB,CAAA,EAElBC,GAAmC,QAAQ,UAEjD,IAAIC,GAAmB,GAGhB,SAASC,IAAkB,CAC5BD,KACJA,GAAmB,GACnBD,GAAiB,KAAKG,EAAK,EAE7B,CASO,SAASC,GAAoB3F,EAAI,CACvCqF,EAAiB,KAAKrF,CAAE,CACzB,CAyBA,MAAM4F,GAAiB,IAAI,IAE3B,IAAIC,EAAW,EAGR,SAASH,IAAQ,CAIvB,GAAIG,IAAa,EAChB,OAED,MAAMC,EAAkBb,GACxB,EAAG,CAGF,GAAI,CACH,KAAOY,EAAWV,EAAiB,QAAQ,CAC1C,MAAM/D,EAAY+D,EAAiBU,CAAQ,EAC3CA,IACAX,GAAsB9D,CAAS,EAC/B2E,GAAO3E,EAAU,EAAE,CACnB,CACD,OAAQ,EAAG,CAEX,MAAA+D,EAAiB,OAAS,EAC1BU,EAAW,EACL,CACN,CAID,IAHAX,GAAsB,IAAI,EAC1BC,EAAiB,OAAS,EAC1BU,EAAW,EACJT,GAAkB,QAAQA,GAAkB,IAAK,EAAA,EAIxD,QAASpD,EAAI,EAAGA,EAAIqD,EAAiB,OAAQrD,GAAK,EAAG,CACpD,MAAMlB,EAAWuE,EAAiBrD,CAAC,EAC9B4D,GAAe,IAAI9E,CAAQ,IAE/B8E,GAAe,IAAI9E,CAAQ,EAC3BA,IAED,CACDuE,EAAiB,OAAS,CAC5B,OAAUF,EAAiB,QAC1B,KAAOG,GAAgB,QACtBA,GAAgB,IAAG,IAEpBE,GAAmB,GACnBI,GAAe,MAAK,EACpBV,GAAsBY,CAAe,CACtC,CAGA,SAASC,GAAOC,EAAI,CACnB,GAAIA,EAAG,WAAa,KAAM,CACzBA,EAAG,OAAM,EACT9F,GAAQ8F,EAAG,aAAa,EACxB,MAAMpE,EAAQoE,EAAG,MACjBA,EAAG,MAAQ,CAAC,EAAE,EACdA,EAAG,UAAYA,EAAG,SAAS,EAAEA,EAAG,IAAKpE,CAAK,EAC1CoE,EAAG,aAAa,QAAQL,EAAmB,CAC3C,CACF,CAOO,SAASM,GAAuB9F,EAAK,CAC3C,MAAM+F,EAAW,CAAA,EACXC,EAAU,CAAA,EAChBd,EAAiB,QAASe,GAAOjG,EAAI,QAAQiG,CAAC,IAAM,GAAKF,EAAS,KAAKE,CAAC,EAAID,EAAQ,KAAKC,CAAC,CAAE,EAC5FD,EAAQ,QAASC,GAAMA,EAAG,CAAA,EAC1Bf,EAAmBa,CACpB,CCnGA,MAAMG,GAAW,IAAI,IAKrB,IAAIC,EAIG,SAASC,GAAe,CAC9BD,EAAS,CACR,EAAG,EACH,EAAG,CAAE,EACL,EAAGA,CACL,CACA,CAIO,SAASE,GAAe,CACzBF,EAAO,GACXpG,GAAQoG,EAAO,CAAC,EAEjBA,EAASA,EAAO,CACjB,CAOO,SAASG,EAAcC,EAAOC,EAAO,CACvCD,GAASA,EAAM,IAClBL,GAAS,OAAOK,CAAK,EACrBA,EAAM,EAAEC,CAAK,EAEf,CASO,SAASC,EAAeF,EAAOC,EAAO3D,EAAQlC,EAAU,CAC9D,GAAI4F,GAASA,EAAM,EAAG,CACrB,GAAIL,GAAS,IAAIK,CAAK,EAAG,OACzBL,GAAS,IAAIK,CAAK,EAClBJ,EAAO,EAAE,KAAK,IAAM,CACnBD,GAAS,OAAOK,CAAK,EACjB5F,IACCkC,GAAQ0D,EAAM,EAAE,CAAC,EACrB5F,IAEJ,CAAG,EACD4F,EAAM,EAAEC,CAAK,CACb,MAAU7F,GACVA,GAEF,CC1FO,SAAS+F,EAAkBC,EAAwB,CACzD,OAAOA,GAAA,YAAAA,EAAwB,UAAW,OACvCA,EACA,MAAM,KAAKA,CAAsB,CACrC,CAKO,SAASC,GAAcL,EAAOM,EAAQ,CAC5CN,EAAM,EAAE,CAAC,EACTM,EAAO,OAAON,EAAM,GAAG,CACxB,CAGO,SAASO,GAAwBP,EAAOM,EAAQ,CACtDJ,EAAeF,EAAO,EAAG,EAAG,IAAM,CACjCM,EAAO,OAAON,EAAM,GAAG,CACzB,CAAE,CACF,CAeO,SAASQ,EACfC,EACAvF,EACAwF,EACAC,EACA9F,EACA+F,EACAN,EACAnE,EACA0E,EACAC,EACAC,EACAC,EACC,CACD,IAAIC,EAAIR,EAAW,OACfS,EAAIN,EAAK,OACTtF,EAAI2F,EACR,MAAME,EAAc,CAAA,EACpB,KAAO7F,KAAK6F,EAAYV,EAAWnF,CAAC,EAAE,GAAG,EAAIA,EAC7C,MAAM8F,EAAa,CAAA,EACbC,EAAa,IAAI,IACjBC,EAAS,IAAI,IACbC,EAAU,CAAA,EAEhB,IADAjG,EAAI4F,EACG5F,KAAK,CACX,MAAMkG,EAAYR,EAAYnG,EAAK+F,EAAMtF,CAAC,EACpCuC,EAAM6C,EAAQc,CAAS,EAC7B,IAAIxB,EAAQM,EAAO,IAAIzC,CAAG,EACrBmC,EAKJuB,EAAQ,KAAK,IAAMvB,EAAM,EAAEwB,EAAWtG,CAAK,CAAC,GAJ5C8E,EAAQc,EAAkBjD,EAAK2D,CAAS,EACxCxB,EAAM,EAAC,GAKRqB,EAAW,IAAIxD,EAAMuD,EAAW9F,CAAC,EAAI0E,GACjCnC,KAAOsD,GAAaG,EAAO,IAAIzD,EAAK,KAAK,IAAIvC,EAAI6F,EAAYtD,CAAG,CAAC,CAAC,CACtE,CACD,MAAM4D,EAAY,IAAI,IAChBC,GAAW,IAAI,IAErB,SAAStF,EAAO4D,EAAO,CACtBD,EAAcC,EAAO,CAAC,EACtBA,EAAM,EAAE7D,EAAM4E,CAAI,EAClBT,EAAO,IAAIN,EAAM,IAAKA,CAAK,EAC3Be,EAAOf,EAAM,MACbkB,GACA,CACD,KAAOD,GAAKC,GAAG,CACd,MAAMS,EAAYP,EAAWF,EAAI,CAAC,EAC5BU,EAAYnB,EAAWQ,EAAI,CAAC,EAC5BY,EAAUF,EAAU,IACpBG,EAAUF,EAAU,IACtBD,IAAcC,GAEjBb,EAAOY,EAAU,MACjBV,IACAC,KACWG,EAAW,IAAIS,CAAO,EAIvB,CAACxB,EAAO,IAAIuB,CAAO,GAAKJ,EAAU,IAAII,CAAO,EACvDzF,EAAOuF,CAAS,EACND,GAAS,IAAII,CAAO,EAC9Bb,IACUK,EAAO,IAAIO,CAAO,EAAIP,EAAO,IAAIQ,CAAO,GAClDJ,GAAS,IAAIG,CAAO,EACpBzF,EAAOuF,CAAS,IAEhBF,EAAU,IAAIK,CAAO,EACrBb,MAXAJ,EAAQe,EAAWtB,CAAM,EACzBW,IAYD,CACD,KAAOA,KAAK,CACX,MAAMW,EAAYnB,EAAWQ,CAAC,EACzBI,EAAW,IAAIO,EAAU,GAAG,GAAGf,EAAQe,EAAWtB,CAAM,CAC7D,CACD,KAAOY,GAAG9E,EAAOgF,EAAWF,EAAI,CAAC,CAAC,EAClC,OAAA1H,GAAQ+H,CAAO,EACRH,CACR,CCvHO,SAASW,GAAkBC,EAAQT,EAAS,CAClD,MAAMlC,EAAS,CAAA,EACT4C,EAAc,CAAA,EACdC,EAAgB,CAAE,QAAS,GACjC,IAAI,EAAIF,EAAO,OACf,KAAO,KAAK,CACX,MAAM,EAAIA,EAAO,CAAC,EACZd,EAAIK,EAAQ,CAAC,EACnB,GAAIL,EAAG,CACN,UAAWrD,KAAO,EACXA,KAAOqD,IAAIe,EAAYpE,CAAG,EAAI,GAErC,UAAWA,KAAOqD,EACZgB,EAAcrE,CAAG,IACrBwB,EAAOxB,CAAG,EAAIqD,EAAErD,CAAG,EACnBqE,EAAcrE,CAAG,EAAI,GAGvBmE,EAAO,CAAC,EAAId,CACf,KACG,WAAWrD,KAAO,EACjBqE,EAAcrE,CAAG,EAAI,CAGvB,CACD,UAAWA,KAAOoE,EACXpE,KAAOwB,IAASA,EAAOxB,CAAG,EAAI,QAErC,OAAOwB,CACR,CCCO,SAAS8C,EAAiBnC,EAAO,CACvCA,GAASA,EAAM,GAChB,CAQO,SAASoC,EAAgB1H,EAAWwB,EAAQG,EAAQ,CAC1D,KAAM,CAAE,SAAAgG,EAAU,aAAAC,GAAiB5H,EAAU,GAC7C2H,GAAYA,EAAS,EAAEnG,EAAQG,CAAM,EAErC4C,GAAoB,IAAM,CACzB,MAAMsD,EAAiB7H,EAAU,GAAG,SAAS,IAAIrB,EAAG,EAAE,OAAOK,EAAW,EAIpEgB,EAAU,GAAG,WAChBA,EAAU,GAAG,WAAW,KAAK,GAAG6H,CAAc,EAI9C/I,GAAQ+I,CAAc,EAEvB7H,EAAU,GAAG,SAAW,EAC1B,CAAE,EACD4H,EAAa,QAAQrD,EAAmB,CACzC,CAGO,SAASuD,EAAkB9H,EAAW+B,EAAW,CACvD,MAAM6C,EAAK5E,EAAU,GACjB4E,EAAG,WAAa,OACnBC,GAAuBD,EAAG,YAAY,EACtC9F,GAAQ8F,EAAG,UAAU,EACrBA,EAAG,UAAYA,EAAG,SAAS,EAAE7C,CAAS,EAGtC6C,EAAG,WAAaA,EAAG,SAAW,KAC9BA,EAAG,IAAM,GAEX,CAGA,SAASmD,GAAW/H,EAAWY,EAAG,CAC7BZ,EAAU,GAAG,MAAM,CAAC,IAAM,KAC7B+D,EAAiB,KAAK/D,CAAS,EAC/BqE,KACArE,EAAU,GAAG,MAAM,KAAK,CAAC,GAE1BA,EAAU,GAAG,MAAOY,EAAI,GAAM,CAAC,GAAK,GAAKA,EAAI,EAC9C,CAaO,SAASoH,EACfhI,EACA0C,EACAuF,EACAC,EACAC,EACAC,EACAC,EAAgB,KAChB7H,EAAQ,CAAC,EAAE,EACV,CACD,MAAM8H,EAAmBzE,GACzBC,GAAsB9D,CAAS,EAE/B,MAAM4E,EAAM5E,EAAU,GAAK,CAC1B,SAAU,KACV,IAAK,CAAE,EAEP,MAAAoI,EACA,OAAQ9J,EACR,UAAA6J,EACA,MAAOtJ,GAAc,EAErB,SAAU,CAAE,EACZ,WAAY,CAAE,EACd,cAAe,CAAE,EACjB,cAAe,CAAE,EACjB,aAAc,CAAE,EAChB,QAAS,IAAI,IAAI6D,EAAQ,UAAY4F,EAAmBA,EAAiB,GAAG,QAAU,CAAA,EAAG,EAEzF,UAAWzJ,GAAc,EACzB,MAAA2B,EACA,WAAY,GACZ,KAAMkC,EAAQ,QAAU4F,EAAiB,GAAG,IAC9C,EACCD,GAAiBA,EAAczD,EAAG,IAAI,EACtC,IAAI2D,EAAQ,GAgBZ,GAfA3D,EAAG,IAAMqD,EACNA,EAASjI,EAAW0C,EAAQ,OAAS,CAAE,EAAE,CAAC9B,EAAG4H,KAAQC,IAAS,CAC9D,MAAM5I,EAAQ4I,EAAK,OAASA,EAAK,CAAC,EAAID,EACtC,OAAI5D,EAAG,KAAOuD,EAAUvD,EAAG,IAAIhE,CAAC,EAAIgE,EAAG,IAAIhE,CAAC,EAAIf,CAAK,IAChD,CAAC+E,EAAG,YAAcA,EAAG,MAAMhE,CAAC,GAAGgE,EAAG,MAAMhE,CAAC,EAAEf,CAAK,EAChD0I,GAAOR,GAAW/H,EAAWY,CAAC,GAE5B4H,CACX,CAAK,EACD,GACH5D,EAAG,OAAM,EACT2D,EAAQ,GACRzJ,GAAQ8F,EAAG,aAAa,EAExBA,EAAG,SAAWsD,EAAkBA,EAAgBtD,EAAG,GAAG,EAAI,GACtDlC,EAAQ,OAAQ,CACnB,GAAIA,EAAQ,QAAS,CAIpB,MAAMgG,EAAQ/E,GAASjB,EAAQ,MAAM,EACrCkC,EAAG,UAAYA,EAAG,SAAS,EAAE8D,CAAK,EAClCA,EAAM,QAAQ9G,CAAM,CACvB,MAEGgD,EAAG,UAAYA,EAAG,SAAS,EAAC,EAEzBlC,EAAQ,OAAO2C,EAAcrF,EAAU,GAAG,QAAQ,EACtD0H,EAAgB1H,EAAW0C,EAAQ,OAAQA,EAAQ,MAAM,EAEzD4B,IACA,CACDR,GAAsBwE,CAAgB,CACvC,CAmSO,MAAMK,CAAgB,CAAtB,cAQNC,GAAA,WAQAA,GAAA,cAGA,UAAW,CACVd,EAAkB,KAAM,CAAC,EACzB,KAAK,SAAWxJ,CAChB,CAQD,IAAIuK,EAAMnJ,EAAU,CACnB,GAAI,CAACV,GAAYU,CAAQ,EACxB,OAAOpB,EAER,MAAMmB,EAAY,KAAK,GAAG,UAAUoJ,CAAI,IAAM,KAAK,GAAG,UAAUA,CAAI,EAAI,CAAE,GAC1E,OAAApJ,EAAU,KAAKC,CAAQ,EAChB,IAAM,CACZ,MAAMoJ,EAAQrJ,EAAU,QAAQC,CAAQ,EACpCoJ,IAAU,IAAIrJ,EAAU,OAAOqJ,EAAO,CAAC,CAC9C,CACE,CAMD,KAAKV,EAAO,CACP,KAAK,OAAS,CAAC/I,GAAS+I,CAAK,IAChC,KAAK,GAAG,WAAa,GACrB,KAAK,MAAMA,CAAK,EAChB,KAAK,GAAG,WAAa,GAEtB,CACF,CCrfO,MAAMW,GAAiB,ICP1B,OAAO,OAAW,MAEpB,OAAO,WAAa,OAAO,SAAW,CAAE,EAAG,IAAI,GAAK,IAAK,EAAE,IAAIA,EAAc,ECK/E,MAAMC,EAAmB,CAAA,EAWlB,SAASC,GAASpJ,EAAOqJ,EAAO,CACtC,MAAO,CACN,UAAWC,GAAStJ,EAAOqJ,CAAK,EAAE,SACpC,CACA,CAWO,SAASC,GAAStJ,EAAOqJ,EAAQ5K,EAAM,CAE7C,IAAI8K,EAEJ,MAAMC,EAAc,IAAI,IAIxB,SAASC,EAAIC,EAAW,CACvB,GAAIrK,EAAeW,EAAO0J,CAAS,IAClC1J,EAAQ0J,EACJH,GAAM,CAET,MAAMI,EAAY,CAACR,EAAiB,OACpC,UAAWS,KAAcJ,EACxBI,EAAW,CAAC,IACZT,EAAiB,KAAKS,EAAY5J,CAAK,EAExC,GAAI2J,EAAW,CACd,QAAS5I,EAAI,EAAGA,EAAIoI,EAAiB,OAAQpI,GAAK,EACjDoI,EAAiBpI,CAAC,EAAE,CAAC,EAAEoI,EAAiBpI,EAAI,CAAC,CAAC,EAE/CoI,EAAiB,OAAS,CAC1B,CACD,CAEF,CAMD,SAASrE,EAAO/F,EAAI,CACnB0K,EAAI1K,EAAGiB,CAAK,CAAC,CACb,CAOD,SAASN,EAAUZ,EAAK+K,EAAapL,EAAM,CAE1C,MAAMmL,EAAa,CAAC9K,EAAK+K,CAAU,EACnC,OAAAL,EAAY,IAAII,CAAU,EACtBJ,EAAY,OAAS,IACxBD,EAAOF,EAAMI,EAAK3E,CAAM,GAAKrG,GAE9BK,EAAIkB,CAAK,EACF,IAAM,CACZwJ,EAAY,OAAOI,CAAU,EACzBJ,EAAY,OAAS,GAAKD,IAC7BA,IACAA,EAAO,KAEX,CACE,CACD,MAAO,CAAE,IAAAE,EAAK,OAAA3E,EAAQ,UAAApF,EACvB,iPCxFMoK,GAAc,MAAUC,GACrB,MAAMA,CAAQ,EAAE,KAAMC,GAAQA,EAAI,MAAM,EAM3CC,GAAiBR,GAAgD,CACrEK,GAAwB,yBAAyB,EAAE,KAAME,GAAQ,CAC3DP,EAAA,CACF,UAAW,GACX,KAAMO,CAAA,CACP,CAAA,CACF,EACA,MAAOE,GAAQ,CACVT,EAAA,CACF,UAAW,GACX,KAAM,OACN,MAAO,wFAAA,CACR,EACD,QAAQ,MAAMS,CAAG,CAAA,CAClB,CACH,EAEaC,GAAUf,GACrB,CACE,UAAW,GACX,KAAM,MACR,EACCK,IACCQ,GAAcR,CAAG,EACV,IAAM,CAAA,EAEjB,EACaW,GAAUhB,GAAoCiB,EAAW,EAKhEC,GAAc,aAAa,QAAQ,OAAO,EAC1CC,GAAyB,OAAO,WAAW,8BAA8B,EACzEC,GAAgBF,KAAgBC,GAAuB,QAAU,OAAS,SAEnEE,GAAQnB,GAAgBgB,IAAeE,EAAa,EACjEC,GAAM,UAAWzK,GAAU,aAAa,QAAQ,QAASA,CAAK,CAAC,EAE/DuK,GAAuB,iBAAiB,SAAWG,GAAM,CAKvDD,GAAM,IAAIC,EAAE,QAAU,OAAS,OAAO,CACxC,CAAC,6BC7CiCC,EAAArK,KAAK,UAAS,WAMbsK,EAAAtK,KAAK,SAAQ,WALnCuK,EAAAvK,KAAK,UAAQwK,GAAAxK,CAAA,EAOfyK,EAAAzK,KAAK,SAAO0K,GAAA1K,CAAA,EAGZ2K,EAAA3K,KAAK,OAAK4K,GAAA5K,CAAA,IAGVA,EAAO,CAAA,GAAA6K,GAAA7K,CAAA,sSAjBhBuB,EAyEQF,EAAAyJ,EAAAtJ,CAAA,EAxENJ,EAuEK0J,EAAAC,CAAA,EAtEH3J,EAQI2J,EAAAC,CAAA,EAPF5J,EAA+C4J,EAAAC,CAAA,sCAM/C7J,EAA+C4J,EAAAE,CAAA,mFANrB7K,EAAA,GAAAgK,KAAAA,EAAArK,KAAK,UAAS,KAAAyD,EAAA0H,EAAAd,CAAA,EACnCrK,KAAK,gEAKiBK,EAAA,GAAAiK,KAAAA,EAAAtK,KAAK,SAAQ,KAAAyD,EAAA2H,EAAAd,CAAA,EAErCtK,KAAK,+DAGLA,KAAK,6DAGLA,EAAO,CAAA,uIAXJqL,EAAArL,KAAK,SAAQ,yMADjBuB,EAA4BF,EAAA4J,EAAAzJ,CAAA,EAAAD,EAE3BF,EAAA6J,EAAA1J,CAAA,SAAAD,EAA2BF,EAAAiK,EAAA9J,CAAA,UADxBnB,EAAA,GAAAgL,KAAAA,EAAArL,KAAK,SAAQ,KAAAyD,EAAA8H,EAAAF,CAAA,mDAM8BG,EAAAxL,KAAK,QAAO,yEAA3B0C,EAAA+I,EAAA,eAAAC,EAAA1L,KAAK,OAAO,UAA9CuB,EAAkEF,EAAAoK,EAAAjK,CAAA,iBAAjBnB,EAAA,GAAAmL,KAAAA,EAAAxL,KAAK,QAAO,KAAAyD,EAAAkI,EAAAH,CAAA,EAA3BnL,EAAA,GAAAqL,KAAAA,EAAA1L,KAAK,qEAGpBwL,EAAAxL,KAAK,MAAK,6EAA7BuB,EAAkCF,EAAAoK,EAAAjK,CAAA,iBAAfnB,EAAA,GAAAmL,KAAAA,EAAAxL,KAAK,MAAK,KAAAyD,EAAAkI,EAAAH,CAAA,yCAItBjB,EAAAvK,KAAQ,SAAO4L,GAAA5L,CAAA,EAqBfyK,EAAAzK,KAAQ,SAAO6L,GAAA7L,CAAA,8FAtBtBuB,EAoDKF,EAAA0J,EAAAvJ,CAAA,+CAnDExB,KAAQ,+DAqBRA,KAAQ,+HAnBJA,EAAO,CAAA,EAAC,QAAQ,eAAa8L,GAAA9L,CAAA,IAK7BA,EAAO,CAAA,EAAC,QAAQ,UAAYA,EAAO,CAAA,EAAC,QAAQ,QAAM+L,GAAA/L,CAAA,IAMlDA,EAAO,CAAA,EAAC,QAAQ,YAAcA,EAAO,CAAA,EAAC,QAAQ,aAAWgM,GAAAhM,CAAA,uGAZhEuB,EAkBGF,EAAA4K,EAAAzK,CAAA,qEAjBIxB,EAAO,CAAA,EAAC,QAAQ,qEAKhBA,EAAO,CAAA,EAAC,QAAQ,UAAYA,EAAO,CAAA,EAAC,QAAQ,8DAM5CA,EAAO,CAAA,EAAC,QAAQ,YAAcA,EAAO,CAAA,EAAC,QAAQ,wIAT7CA,EAAO,CAAA,EAAC,QAAQ,cAAa,qFADjCuB,EAECF,EAAA6K,EAAA1K,CAAA,SAAAD,EAAKF,EAAA8K,EAAA3K,CAAA,sBADFxB,EAAO,CAAA,EAAC,QAAQ,cAAa,KAAAyD,EAAAkI,EAAAH,CAAA,kDAKPxL,EAAO,CAAA,EAAC,QAAQ,SAAQ,WAC1BA,EAAO,CAAA,EAAC,QAAQ,OAAM,uDADY;AAAA,mBACxD,2FAFFuB,EAGOF,EAAAiK,EAAA9J,CAAA,EAFLJ,EAAwDkK,EAAAL,CAAA,gBACxD7J,EAAmDkK,EAAAJ,CAAA,gBAC9C3J,EAAKF,EAAA8K,EAAA3K,CAAA,sBAFcxB,EAAO,CAAA,EAAC,QAAQ,SAAQ,KAAAyD,EAAA0H,EAAAd,CAAA,cAC1BrK,EAAO,CAAA,EAAC,QAAQ,OAAM,KAAAyD,EAAA2I,EAAAC,CAAA,kDAKjBrM,EAAO,CAAA,EAAC,QAAQ,WAAU,WACzBA,EAAO,CAAA,EAAC,QAAQ,YAAW,mDADM;AAAA,mBAC7D,oFAFFuB,EAGMF,EAAAiK,EAAA9J,CAAA,EAFJJ,EAA6DkK,EAAAL,CAAA,gBAC7D7J,EAA8DkK,EAAAJ,CAAA,6BADnClL,EAAO,CAAA,EAAC,QAAQ,WAAU,KAAAyD,EAAA0H,EAAAd,CAAA,cACzBrK,EAAO,CAAA,EAAC,QAAQ,YAAW,KAAAyD,EAAA2I,EAAAC,CAAA,6CAOtDrM,EAAO,CAAA,EAAC,QAAQ,SAAOsM,GAAAtM,CAAA,IAOvBA,EAAO,CAAA,EAAC,QAAQ,KAAGuM,GAAAvM,CAAA,IAYnBA,EAAO,CAAA,EAAC,QAAQ,OAAKwM,GAAAxM,CAAA,sGApB5BuB,EA2BKF,EAAA0J,EAAAvJ,CAAA,qEA1BExB,EAAO,CAAA,EAAC,QAAQ,+DAOhBA,EAAO,CAAA,EAAC,QAAQ,2DAYhBA,EAAO,CAAA,EAAC,QAAQ,oIAhBbA,EAAO,CAAA,EAAC,QAAQ,aAAY,kFADNA,EAAO,CAAA,EAAC,QAAQ,OAAO,wCADnDuB,EAIGF,EAAA4K,EAAAzK,CAAA,EAHDJ,EAEA6K,EAAAjN,CAAA,6BADIgB,EAAO,CAAA,EAAC,QAAQ,aAAY,KAAAyD,EAAAkI,EAAAH,CAAA,qBADNxL,EAAO,CAAA,EAAC,QAAQ,iEAavCA,EAAO,CAAA,EAAC,QAAQ,IAAG,uIAFdA,EAAO,CAAA,EAAC,QAAQ,GAAG,wCAL7BuB,EASGF,EAAA4K,EAAAzK,CAAA,EARDJ,EAOG6K,EAAAjN,CAAA,6BADAgB,EAAO,CAAA,EAAC,QAAQ,IAAG,KAAAyD,EAAAkI,EAAAH,CAAA,cAFdxL,EAAO,CAAA,EAAC,QAAQ,6DASpBA,EAAO,CAAA,EAAC,QAAQ,MAAK,uFADMA,EAAO,CAAA,EAAC,QAAQ,KAAK,wCADtDuB,EAIGF,EAAA4K,EAAAzK,CAAA,EAHDJ,EAEA6K,EAAAjN,CAAA,6BADIgB,EAAO,CAAA,EAAC,QAAQ,MAAK,KAAAyD,EAAAkI,EAAAH,CAAA,wBADMxL,EAAO,CAAA,EAAC,QAAQ,8DAhE3DA,EAAS,CAAA,GAAAyM,GAAAzM,CAAA,mEAATA,EAAS,CAAA,6HALF,KAAA8B,CAAU,EAAA4K,GACV,QAAAC,CAAmC,EAAAD,GACnC,UAAAE,CAAkB,EAAAF,wNCF/B,MAAMG,GAAYC,GAAIhD,EAAO,EAEvBnK,GAAI,CAACqD,EAAa+J,EAAmB,KAClCF,GAAU,eAAe7J,CAAG,EAAI6J,GAAU7J,CAAG,EAAI+J,iFCA5B/M,EAAI,CAAA,EAAA,mCAAtBA,EAAS,CAAA,CAAA,UAAnBuB,EAAoCF,EAAA4K,EAAAzK,CAAA,oCAARxB,EAAI,CAAA,EAAA,MAAAiM,EAAA,UAAAe,oBAAtBhN,EAAS,CAAA,CAAA,2CADdA,EAAI,CAAA,CAAA,uBAAT,OAAIS,GAAA,gKAACT,EAAI,CAAA,CAAA,oBAAT,OAAIS,GAAA,EAAA,2HAAJ,+DAJW,KAAAuB,CAAc,EAAA0K,EACd,CAAA,UAAAO,EAAoB,EAAE,EAAAP,kNCcpB1M,EAAK,CAAA,CAAA,oFAAfA,EAAQ,CAAA,GAAAyM,GAAAzM,CAAA,0BAAeA,EAAI,CAAA,CAAA,yCAA3BA,EAAQ,CAAA,GAAAkN,EAAA,EAAAlN,EAAAK,CAAA,2DAbA,KAAA8M,CAAkB,EAAAT,EAEvB,MAAAU,EAAWD,EAAK,OAASA,EAAK,MAAQ,GAAKA,EAAK,OAAS,GACzDE,EAAU,IAAO,KAAK,eAAe,KAAI,CAAI,MAAO,OAAO,CAAA,EAC3DC,MAAY,KAChBH,EAAK,KACJA,EAAK,OAASC,EAAWD,EAAK,MAAQ,EAAI,CAAC,EAGxCI,EAAOD,EAAM,cACbE,EAAQH,EAAW,OAAOC,CAAK,qNCPNtN,EAAS,CAAA,CAAA,EAAA,gFAApBA,EAAE,CAAA,CAAA,cAAFA,EAAE,CAAA,CAAA,EAAAyN,EAAAC,CAAA,UAAxBnM,EAAmEF,EAAAoM,EAAAjM,CAAA,qGAA7CxB,EAAE,CAAA,CAAA,EAAAyN,EAAAC,EAAAxG,GAAAyG,EAAA,qBAAS3N,EAAS,CAAA,CAAA,EAAA,oBAAA,CAAA,MAAA4N,CAAA,6FAApB5N,EAAE,CAAA,QAAFA,EAAE,CAAA,GAAA6N,GAAA7N,CAAA,wEAAFA,EAAE,CAAA,QAAFA,EAAE,CAAA,CAAA,oBAAFA,EAAE,CAAA,iDAAFA,EAAE,CAAA,iDAAFA,EAAE,CAAA,wHALX,GAAA8N,CAA2C,EAAApB,EAClD,CAAA,MAAAO,EAAY,EAAE,EAAAP,6MCUjB,IAAAlB,EAAAxL,KAAS,MAAK,gDAAdK,EAAA,GAAAmL,KAAAA,EAAAxL,KAAS,MAAK,KAAAyD,EAAA,EAAA+H,CAAA,sDAGoE,SAAO,sEAA7B,OAAA2B,EAAA,IAAAY,GAAA,CAAA,MAAA,CAAA,KAAA/N,KAAS,EAAE,CAAA,CAAA,iEAAXK,EAAA,IAAA2N,EAAA,KAAAhO,KAAS,wIAIxD,MAAA,CAAA,KAAAA,KAAS,WAAW,6CADlCuB,EAEKF,EAAA0J,EAAAvJ,CAAA,sCADSnB,EAAA,IAAA4N,EAAA,KAAAjO,KAAS,8OAJX,MAAA,CAAA,KAAAA,KAAS,IAAI,yCAAY,OAAAA,KAAS,GAAE,iCAE5CA,EAAK,CAAA,GAAAyM,GAAAzM,CAAA,mEAFoB,KAAG,yFADlCuB,EAEIF,EAAA6M,EAAA1M,CAAA,kJADUnB,EAAA,IAAA2N,EAAA,KAAAhO,KAAS,mJAEjBA,EAAK,CAAA,GAAAyK,EAAA,EAAAzK,EAAAK,CAAA,oNAXE,SAAA8N,CAAkB,EAAAzB,EACzBvK,EAAQgM,EAAS,YAAY,OAAS,6JCHvC9D,EAAArK,KAAO,KAAI,OAAGqM,EAAArM,KAAO,OAAM,SAAWoO,EAAApO,KAAO,MAAK,SACnDqO,EAAArO,KAAO,YAAW,kDADW,KAAG,6GAApCuB,EAAmEF,EAAA6M,EAAA1M,CAAA,8BAA/BJ,EAA2B8M,EAAAhC,CAAA,kBAC/D3K,EAA0BF,EAAA4K,EAAAzK,CAAA,mBADrBnB,EAAA,GAAAgK,KAAAA,EAAArK,KAAO,KAAI,KAAAyD,EAAA0H,EAAAd,CAAA,EAAGhK,EAAA,GAAAgM,KAAAA,EAAArM,KAAO,OAAM,KAAAyD,EAAA2I,EAAAC,CAAA,EAAWhM,EAAA,GAAA+N,KAAAA,EAAApO,KAAO,MAAK,KAAAyD,EAAA6K,EAAAF,CAAA,EACnD/N,EAAA,GAAAgO,KAAAA,EAAArO,KAAO,YAAW,KAAAyD,EAAA8K,EAAAF,CAAA,6DAJT,OAAAG,CAAM,EAAA9B,q3SCsBF1M,EAAK,CAAA,GAAIA,EAAI,CAAA,EAAC,OAAK,KAAmByO,EAAAzO,KAAK,IAAG,oGALtDA,EAAK,CAAA,CAAA,eACJA,EAAM,CAAA,CAAA,uBACAA,EAAI,CAAA,EAAC,QAAQ,MAAIA,EAAI,CAAA,EAAC,QAAQ,CAAC,aACvCA,EAAI,CAAA,EAAC,MAAQ,MAAM,oDAN3BuB,EASAF,EAAAqN,EAAAlN,CAAA,EADGJ,EAA0CsN,EAAAC,CAAA,gBAAAvN,EAAuBsN,EAAAE,CAAA,uCAAnD5O,EAAK,CAAA,GAAIA,EAAI,CAAA,EAAC,OAAK,MAAA2O,EAAA,UAAAE,oBAL3B7O,EAAK,CAAA,CAAA,oBACJA,EAAM,CAAA,CAAA,iDAbH,KAAA8B,CAAc,EAAA4K,EACd,CAAA,MAAAoC,EAAgB,EAAE,EAAApC,EAClB,CAAA,OAAAqC,EAAiB,EAAE,EAAArC,EACnB,CAAA,MAAAsC,EAA4B,MAAS,EAAAtC,QAG1CuC,EADuBC,GACLpN,CAAI,wXCCuEuI,EAAArK,KAAI,QAAO,mDAA0C,MAAAA,KAAI,gDAA7C,UAAQ,yFAAhG0C,EAAA1D,EAAA,OAAAmQ,EAAAnP,KAAI,GAAG,EAAU0C,EAAA1D,EAAA,QAAAoQ,EAAApP,KAAI,OAAO,iCAAnDuB,EAA4KF,EAAArC,EAAAwC,CAAA,EAAvGJ,EAAyDpC,EAAAkN,CAAA,0CAA3B,CAAAmD,GAAAhP,EAAA,IAAAgK,KAAAA,EAAArK,KAAI,QAAO,KAAAyD,EAAA0H,EAAAd,CAAA,aAA0ChK,EAAA,IAAAiP,EAAA,MAAAtP,KAAI,oBAArI,CAAAqP,GAAAhP,EAAA,GAAA8O,KAAAA,EAAAnP,KAAI,sBAAa,CAAAqP,GAAAhP,EAAA,GAAA+O,KAAAA,EAAApP,KAAI,wPAI1CuB,EAEIF,EAAAkO,EAAA/N,CAAA,wLAHD0L,EAAAlN,KAAS,MAAI6K,GAAA7K,CAAA,uHAAbA,KAAS,8SAUH,IAAAwP,EAAAlK,EAAAtF,KAAI,OAAO,EAAY,MAAA6F,EAAA7F,GAAAA,KAAO,uBAAnC,OAAIS,GAAA,EAAA,qNAHVc,EASIF,EAAAkO,EAAA/N,CAAA,qBAPFJ,EAMImO,EAAAE,CAAA,8HALKD,EAAAlK,EAAAtF,KAAI,OAAO,8FAAhB,OAAIS,GAAA,iKAF+Bd,GAAE,gBAAiB,SAAS,EAAA,4MAG/D4B,EAEKF,EAAAqO,EAAAlO,CAAA,6LAjBJ6I,EAAArK,KAAI,QAAO,OAAIqM,EAAArM,KAAI,SAAQ,4BAAauK,EAAAvK,KAAI,KAAG6L,GAAA7L,CAAA,EAGjD2P,EAAArK,EAAAtF,KAAI,SAAS,EAAc,MAAA6F,EAAA7F,GAAAA,KAAS,sBAAzC,OAAIS,GAAA,EAAA,8CAOD,IAAAgK,EAAAzK,KAAI,SAAOyM,GAAAzM,CAAA,8CAVK,IAAE,sJADvBuB,EAGIF,EAAAuO,EAAApO,CAAA,EAFFJ,EAA0CwO,EAAA1D,CAAA,2IAAnC,CAAAmD,GAAAhP,EAAA,IAAAgK,KAAAA,EAAArK,KAAI,QAAO,KAAAyD,EAAA0H,EAAAd,CAAA,GAAI,CAAAgF,GAAAhP,EAAA,IAAAgM,KAAAA,EAAArM,KAAI,SAAQ,KAAAyD,EAAA2I,EAAAC,CAAA,EAAarM,KAAI,yGAG9C2P,EAAArK,EAAAtF,KAAI,SAAS,sDAOfA,KAAI,iJAPP,OAAIS,GAAA,+LAPO,IAAAoP,CAAQ,EAAAnD,yMCFc,UAAY,kDAAM,aAAW,uEAFhEnL,EAEuEF,EAAA4K,EAAAzK,CAAA,EAFpEJ,EAEiE6K,EAAAjN,CAAA,+LADlE,OAAO,SAAS,EAAG,CAAC,qSCYJgB,EAAS,CAAA,CAAA,CAAA,CAAA,0FAFzBuB,EAISF,EAAAyO,EAAAtO,CAAA,EAHPJ,EAEK0O,EAAA/E,CAAA,mDADS/K,EAAS,CAAA,mJAQdA,EAAW,CAAA,CAAA,EAAgB,MAAA6F,EAAA7F,GAAAA,MAAW,wBAA3C,OAAIS,GAAA,EAAA,mGAFHd,GAAE,qBAAsB,cAAc,CAAA,qGAD7C4B,EAOSF,EAAAyO,EAAAtO,CAAA,EANPJ,EAAiD0O,EAAArE,CAAA,SACjDrK,EAII0O,EAAAC,CAAA,0EAHK/P,EAAW,CAAA,CAAA,2EAAhB,OAAIS,GAAA,2KACgBT,EAAU,EAAA,CAAA,CAAA,CAAA,8HAAVA,EAAU,EAAA,qJASzBA,EAAW,CAAA,CAAA,EAAS,MAAA6F,EAAA7F,GAAAA,KAAI,wBAA7B,OAAIS,GAAA,EAAA,mGAFHd,GAAE,qBAAsB,cAAc,CAAA,qGAD7C4B,EASSF,EAAAyO,EAAAtO,CAAA,EARPJ,EAAiD0O,EAAArE,CAAA,SACjDrK,EAMI0O,EAAAC,CAAA,0EALK/P,EAAW,CAAA,CAAA,2EAAhB,OAAIS,GAAA,qXACEyM,EAAA,CAAAlN,KAAI,QAAM6L,GAAA7L,CAAA,uHAAVA,KAAI,oOAWLA,EAAS,CAAA,CAAA,EAAW,MAAA6F,EAAA7F,GAAAA,KAAM,4BAA/B,OAAIS,GAAA,EAAA,mGAFHd,GAAE,kBAAmB,WAAW,CAAA,uGADvC4B,EAUSF,EAAAyO,EAAAtO,CAAA,EATPJ,EAA2C0O,EAAArE,CAAA,SAC3CrK,EAOI0O,EAAAL,CAAA,0EANKzP,EAAS,CAAA,CAAA,2EAAd,OAAIS,GAAA,6IAEE4J,EAAArK,KAAM,YAAW,eACjBsK,EAAAtK,KAAM,YAAW,SADmB,OAAAmN,EAAA,IAAAY,GAAA,CAAA,MAAA,CAAA,KAAA/N,KAAM,IAAI,CAAA,CAAA,sDAAxB,IAAE,8EAD9BuB,EAGIF,EAAAqO,EAAAlO,CAAA,EAFFJ,EAA0BsO,EAAAzQ,CAAA,4BAA4BmC,EAAKsO,EAAAvD,CAAA,SAC3D/K,EAAyBsO,EAAAjP,CAAA,kCADrB,CAAA4O,GAAAhP,EAAA,IAAAgK,KAAAA,EAAArK,KAAM,YAAW,KAAAyD,EAAA0H,EAAAd,CAAA,aAAmBhK,EAAA,IAAA2N,EAAA,KAAAhO,KAAM,iBAC1C,CAAAqP,GAAAhP,EAAA,IAAAiK,KAAAA,EAAAtK,KAAM,YAAW,KAAAyD,EAAA2H,EAAAd,CAAA,yHApC1BtK,EAAS,CAAA,GAAAuM,GAAAvM,CAAA,IAOTA,EAAW,CAAA,GAAAwM,GAAAxM,CAAA,IAUXA,EAAW,CAAA,GAAA6K,GAAA7K,CAAA,IAYXA,EAAS,CAAA,GAAAyM,GAAAzM,CAAA,4NA7BTA,EAAS,CAAA,yGAOTA,EAAW,CAAA,yGAUXA,EAAW,CAAA,yGAYXA,EAAS,CAAA,yTAnCD,UAAAgQ,CAAgC,EAAAtD,GAChC,YAAAuD,CAA8B,EAAAvD,GAC9B,YAAAwD,CAA8B,EAAAxD,GAC9B,UAAAyD,CAAmC,EAAAzD,ugBCQvC1M,EAAc,CAAA,CAAA,uBAAnB,OAAIS,GAAA,2DADDd,GAAE,kBAAmB,WAAW,CAAA,4DAArC4B,EAA2CF,EAAAoK,EAAAjK,CAAA,sFACpCxB,EAAc,CAAA,CAAA,oBAAnB,OAAIS,GAAA,EAAA,2HAAJ,mEAIO4J,EAAArK,MAAK,KAAI,SACuBgN,EAAAhN,MAAK,KAAI,wKAF5CuB,EAGIF,EAAAqO,EAAAlO,CAAA,gBADFJ,EAAiDsO,EAAAxD,CAAA,4BADhD7L,EAAA,GAAAgK,KAAAA,EAAArK,MAAK,KAAI,KAAAyD,EAAA0H,EAAAd,CAAA,EACuBhK,EAAA,GAAA2M,KAAAA,EAAAhN,MAAK,KAAI,MAAAkM,EAAA,UAAAc,6DAHvChN,EAAS,CAAA,CAAA,EAAU,MAAA6F,EAAA7F,GAAAA,MAAK,qBAA7B,OAAIS,GAAA,EAAA,2JADRc,EAOIF,EAAAoO,EAAAjO,CAAA,4EANKxB,EAAS,CAAA,CAAA,kIAWXA,EAAK,CAAA,CAAA,EAAU,MAAA6F,EAAA7F,GAAAA,KAAK,qBAAzB,OAAIS,GAAA,EAAA,gHADRc,EAaIF,EAAAoO,EAAAjO,CAAA,0EAZKxB,EAAK,CAAA,CAAA,2EAAV,OAAIS,GAAA,iJAQwC4J,EAAArK,KAAK,KAAI,aAArC,OAAAiP,EAAA,IAAAmB,GAAA,CAAA,MAAA,CAAA,KAAApQ,KAAK,IAAI,CAAA,CAAA,oGALR0C,EAAA1D,EAAA,QAAAqR,EAAA,QAAArQ,KAAK,KAAI,gBAAA,0DAGhB0C,EAAA1D,EAAA,OAAAmQ,EAAAnP,KAAK,IAAI,oDALnBuB,EASIF,EAAAqO,EAAAlO,CAAA,EARFJ,EAOGsO,EAAA1Q,CAAA,cADwBoC,EAAcpC,EAAAkN,CAAA,4CAA3B7L,EAAA,IAAAiP,EAAA,KAAAtP,KAAK,iBAAuB,CAAAqP,GAAAhP,EAAA,IAAAgK,KAAAA,EAAArK,KAAK,KAAI,KAAAyD,EAAA0H,EAAAd,CAAA,GALpC,CAAAgF,GAAAhP,EAAA,GAAAgQ,KAAAA,EAAA,QAAArQ,KAAK,KAAI,oCAGhB,CAAAqP,GAAAhP,EAAA,GAAA8O,KAAAA,EAAAnP,KAAK,6IArBhBA,EAAc,CAAA,GAAA6K,GAAA7K,CAAA,IAadA,EAAK,CAAA,GAAAyM,GAAAzM,CAAA,8IAfiBA,EAAe,CAAA,CAAA,kBAErCA,EAAc,CAAA,oEAadA,EAAK,CAAA,8NA1BG,eAAAsQ,CAA2C,EAAA5D,GAC3C,MAAA6D,CAAyB,EAAA7D,QAE9B8D,EAAU,SAAS,gBAEnBC,EAAmBrG,GAAa,CACpCoG,EAAQ,MAAM,YAAY,YAAapG,EAAE,QAAQ,SAAQ,CAAA,EACzDoG,EAAQ,MAAM,YAAY,YAAapG,EAAE,QAAQ,SAAQ,CAAA,+OCWlC,MAAA,CAAA,KAAA,OAAA,MAAA,UAAY,EAAE,uHADzC7I,EAEQF,EAAAqP,EAAAlP,CAAA,mMALkB,MAAA,CAAA,KAAA,MAAA,MAAA,UAAY,EAAE,sHADxCD,EAEQF,EAAAqP,EAAAlP,CAAA,qNAHH,OAAAxB,OAAkB,QAAO,2TAXtB,MAAA2Q,EAAYjR,GAAY,CAC5ByK,GAAM,IAAIzK,CAAK,OAGbkR,EAEJ,OAAAzG,GAAM,UAAWzK,GAAK,CACpBmR,EAAA,EAAAD,EAAgBlR,CAAK,SAKD,IAAAiR,EAAS,MAAM,EAIf,IAAAA,EAAS,OAAO,4FCdxBtF,EAAA,IAAA,OAAO,YAAW,EAAA,SAAK1L,GAAE,mBAAoB,KAAK,EAAA,WAE3D,UAAM,gBAIN,WAAM,iEAPT,IACO,mDAEA,GAAC,8DAID,GAAC,aAAI;AAAA,oBACG,2LATnB4B,EAYQF,EAAAyP,EAAAtP,EAAA,EAXNJ,EAUG0P,EAAA7E,CAAA,qCARD7K,EAGM6K,EAAAhB,CAAA,iDACN7J,EAGM6K,EAAAf,CAAA,+BADS9J,EAA8E8J,EAAAlM,CAAA,sTCZjGuC,EAAuDF,EAAArC,EAAAwC,CAAA,2ICsCjDgK,EAAAxL,KAAS,MAAK,wCAAlBuB,EAAsBF,EAAA4K,EAAAzK,CAAA,iBAAlBnB,EAAA,GAAAmL,KAAAA,EAAAxL,KAAS,MAAK,KAAAyD,EAAAkI,EAAAH,CAAA,2GAnBVxL,EAAQ,CAAA,EAAC,KAAK,aACXA,EAAQ,CAAA,EAAC,KAAK,QACZ,UAAAA,KAAS,wCAIPA,EAAQ,CAAA,EAAC,KAAK,sBACZA,EAAQ,CAAA,EAAC,KAAK,wBACdA,EAAQ,CAAA,EAAC,KAAK,sBAChBA,EAAQ,CAAA,EAAC,KAAK,6CAKTA,EAAQ,CAAA,EAAC,KAAK,gBACvBA,EAAQ,CAAA,EAAC,KAAK,uNAXzBuB,EAOSF,EAAAyO,EAAAtO,CAAA,uBACTD,EAKOF,EAAA0P,EAAAvP,CAAA,mDAjBCxB,EAAQ,CAAA,EAAC,KAAK,sBACXA,EAAQ,CAAA,EAAC,KAAK,SACZK,EAAA,IAAA2Q,EAAA,UAAAhR,KAAS,kDAIPA,EAAQ,CAAA,EAAC,KAAK,+BACZA,EAAQ,CAAA,EAAC,KAAK,iCACdA,EAAQ,CAAA,EAAC,KAAK,+BAChBA,EAAQ,CAAA,EAAC,KAAK,uDAKTA,EAAQ,CAAA,EAAC,KAAK,yBACvBA,EAAQ,CAAA,EAAC,KAAK,oUAlBtB,OAAAA,KAAS,WAAa,IAASA,KAAS,KAAI,EAqBvCA,KAAS,WAAa,IAASA,KAAS,MAAK,odA9BjD4Q,EAEJ,OAAAzG,GAAM,UAAWzK,GAAK,CACpBkR,EAAgBlR,EAChB,SAAS,KAAK,UAAU,OAAO,QAAS,MAAM,EAC9C,SAAS,KAAK,UAAU,IAAIkR,IAAkB,OAAS,OAAS,OAAO,wECZ/D,IAAIK,GAAI,CAClB,OAAQ,SAAS,eAAe,MAAM,EACtC,MAAO,CAAC,CACV,CAAC","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}