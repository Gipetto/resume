{"version":3,"mappings":"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","names":["component","node","get_component","render_fn","hydrating","hydrate_next","branches","BranchManager","block","target","EFFECT_TRANSPARENT","is_bound_this","bound_value","element_or_component","STATE_SYMBOL","bind_this","update","get_value","get_parts","effect","old_parts","parts","render_effect","untrack","queue_micro_task","asClassComponent","Svelte4Component","options","#events","#instance","sources","add_source","key","value","s","mutable_source","props","prop","get","LEGACY_PROPS","set","hydrate","mount","flushSync","define_property","next","unmount","event","callback","cb","args","fn","matchers","components","$.prop","$$props","data_0","data_1","data_2","$.user_pre_effect","$.user_effect","mounted","navigated","title","onMount","unsubscribe","$.get","$.set","tick","Pyramid_2","Pyramid_0","Pyramid_1","$$value","$$render","consequent","alternate","consequent_1","alternate_1","consequent_2","consequent_3","root","Root","nodes","__vitePreload","server_loads","dictionary","hooks","error","decoders","k","v","hash","decode","type"],"ignoreList":[0,1,2],"sources":["../../../../../../node_modules/svelte/src/internal/client/dom/blocks/svelte-component.js","../../../../../../node_modules/svelte/src/internal/client/dom/elements/bindings/this.js","../../../../../../node_modules/svelte/src/legacy/legacy-client.js","../../../../../generated/client-optimized/matchers.js","../../../../../generated/root.svelte","../../../../../generated/root.js","../../../../../generated/client-optimized/app.js"],"sourcesContent":["/** @import { TemplateNode, Dom } from '#client' */\nimport { EFFECT_TRANSPARENT } from '#client/constants';\nimport { block } from '../../reactivity/effects.js';\nimport { hydrate_next, hydrating } from '../hydration.js';\nimport { BranchManager } from './branches.js';\n\n/**\n * @template P\n * @template {(props: P) => void} C\n * @param {TemplateNode} node\n * @param {() => C} get_component\n * @param {(anchor: TemplateNode, component: C) => Dom | void} render_fn\n * @returns {void}\n */\nexport function component(node, get_component, render_fn) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar branches = new BranchManager(node);\n\n\tblock(() => {\n\t\tvar component = get_component() ?? null;\n\t\tbranches.ensure(component, component && ((target) => render_fn(target, component)));\n\t}, EFFECT_TRANSPARENT);\n}\n","import { STATE_SYMBOL } from '#client/constants';\nimport { effect, render_effect } from '../../../reactivity/effects.js';\nimport { untrack } from '../../../runtime.js';\nimport { queue_micro_task } from '../../task.js';\n\n/**\n * @param {any} bound_value\n * @param {Element} element_or_component\n * @returns {boolean}\n */\nfunction is_bound_this(bound_value, element_or_component) {\n\treturn (\n\t\tbound_value === element_or_component || bound_value?.[STATE_SYMBOL] === element_or_component\n\t);\n}\n\n/**\n * @param {any} element_or_component\n * @param {(value: unknown, ...parts: unknown[]) => void} update\n * @param {(...parts: unknown[]) => unknown} get_value\n * @param {() => unknown[]} [get_parts] Set if the this binding is used inside an each block,\n * \t\t\t\t\t\t\t\t\t\treturns all the parts of the each block context that are used in the expression\n * @returns {void}\n */\nexport function bind_this(element_or_component = {}, update, get_value, get_parts) {\n\teffect(() => {\n\t\t/** @type {unknown[]} */\n\t\tvar old_parts;\n\n\t\t/** @type {unknown[]} */\n\t\tvar parts;\n\n\t\trender_effect(() => {\n\t\t\told_parts = parts;\n\t\t\t// We only track changes to the parts, not the value itself to avoid unnecessary reruns.\n\t\t\tparts = get_parts?.() || [];\n\n\t\t\tuntrack(() => {\n\t\t\t\tif (element_or_component !== get_value(...parts)) {\n\t\t\t\t\tupdate(element_or_component, ...parts);\n\t\t\t\t\t// If this is an effect rerun (cause: each block context changes), then nullfiy the binding at\n\t\t\t\t\t// the previous position if it isn't already taken over by a different effect.\n\t\t\t\t\tif (old_parts && is_bound_this(get_value(...old_parts), element_or_component)) {\n\t\t\t\t\t\tupdate(null, ...old_parts);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn () => {\n\t\t\t// We cannot use effects in the teardown phase, we we use a microtask instead.\n\t\t\tqueue_micro_task(() => {\n\t\t\t\tif (parts && is_bound_this(get_value(...parts), element_or_component)) {\n\t\t\t\t\tupdate(null, ...parts);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t});\n\n\treturn element_or_component;\n}\n","/** @import { ComponentConstructorOptions, ComponentType, SvelteComponent, Component } from 'svelte' */\nimport { DIRTY, LEGACY_PROPS, MAYBE_DIRTY } from '../internal/client/constants.js';\nimport { user_pre_effect } from '../internal/client/reactivity/effects.js';\nimport { mutable_source, set } from '../internal/client/reactivity/sources.js';\nimport { hydrate, mount, unmount } from '../internal/client/render.js';\nimport { active_effect, get, set_signal_status } from '../internal/client/runtime.js';\nimport { flushSync } from '../internal/client/reactivity/batch.js';\nimport { define_property, is_array } from '../internal/shared/utils.js';\nimport * as e from '../internal/client/errors.js';\nimport * as w from '../internal/client/warnings.js';\nimport { DEV } from 'esm-env';\nimport { FILENAME } from '../constants.js';\nimport { component_context, dev_current_component_function } from '../internal/client/context.js';\nimport { async_mode_flag } from '../internal/flags/index.js';\n\n/**\n * Takes the same options as a Svelte 4 component and the component function and returns a Svelte 4 compatible component.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {ComponentConstructorOptions<Props> & {\n * \tcomponent: ComponentType<SvelteComponent<Props, Events, Slots>> | Component<Props>;\n * }} options\n * @returns {SvelteComponent<Props, Events, Slots> & Exports}\n */\nexport function createClassComponent(options) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn new Svelte4Component(options);\n}\n\n/**\n * Takes the component function and returns a Svelte 4 compatible component constructor.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {SvelteComponent<Props, Events, Slots> | Component<Props>} component\n * @returns {ComponentType<SvelteComponent<Props, Events, Slots> & Exports>}\n */\nexport function asClassComponent(component) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn class extends Svelte4Component {\n\t\t/** @param {any} options */\n\t\tconstructor(options) {\n\t\t\tsuper({\n\t\t\t\tcomponent,\n\t\t\t\t...options\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Support using the component as both a class and function during the transition period\n * @typedef  {{new (o: ComponentConstructorOptions): SvelteComponent;(...args: Parameters<Component<Record<string, any>>>): ReturnType<Component<Record<string, any>, Record<string, any>>>;}} LegacyComponentType\n */\n\nclass Svelte4Component {\n\t/** @type {any} */\n\t#events;\n\n\t/** @type {Record<string, any>} */\n\t#instance;\n\n\t/**\n\t * @param {ComponentConstructorOptions & {\n\t *  component: any;\n\t * }} options\n\t */\n\tconstructor(options) {\n\t\tvar sources = new Map();\n\n\t\t/**\n\t\t * @param {string | symbol} key\n\t\t * @param {unknown} value\n\t\t */\n\t\tvar add_source = (key, value) => {\n\t\t\tvar s = mutable_source(value, false, false);\n\t\t\tsources.set(key, s);\n\t\t\treturn s;\n\t\t};\n\n\t\t// Replicate coarse-grained props through a proxy that has a version source for\n\t\t// each property, which is incremented on updates to the property itself. Do not\n\t\t// use our $state proxy because that one has fine-grained reactivity.\n\t\tconst props = new Proxy(\n\t\t\t{ ...(options.props || {}), $$events: {} },\n\t\t\t{\n\t\t\t\tget(target, prop) {\n\t\t\t\t\treturn get(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t},\n\t\t\t\thas(target, prop) {\n\t\t\t\t\t// Necessary to not throw \"invalid binding\" validation errors on the component side\n\t\t\t\t\tif (prop === LEGACY_PROPS) return true;\n\n\t\t\t\t\tget(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t\treturn Reflect.has(target, prop);\n\t\t\t\t},\n\t\t\t\tset(target, prop, value) {\n\t\t\t\t\tset(sources.get(prop) ?? add_source(prop, value), value);\n\t\t\t\t\treturn Reflect.set(target, prop, value);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.#instance = (options.hydrate ? hydrate : mount)(options.component, {\n\t\t\ttarget: options.target,\n\t\t\tanchor: options.anchor,\n\t\t\tprops,\n\t\t\tcontext: options.context,\n\t\t\tintro: options.intro ?? false,\n\t\t\trecover: options.recover\n\t\t});\n\n\t\t// We don't flushSync for custom element wrappers or if the user doesn't want it,\n\t\t// or if we're in async mode since `flushSync()` will fail\n\t\tif (!async_mode_flag && (!options?.props?.$$host || options.sync === false)) {\n\t\t\tflushSync();\n\t\t}\n\n\t\tthis.#events = props.$$events;\n\n\t\tfor (const key of Object.keys(this.#instance)) {\n\t\t\tif (key === '$set' || key === '$destroy' || key === '$on') continue;\n\t\t\tdefine_property(this, key, {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#instance[key];\n\t\t\t\t},\n\t\t\t\t/** @param {any} value */\n\t\t\t\tset(value) {\n\t\t\t\t\tthis.#instance[key] = value;\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tthis.#instance.$set = /** @param {Record<string, any>} next */ (next) => {\n\t\t\tObject.assign(props, next);\n\t\t};\n\n\t\tthis.#instance.$destroy = () => {\n\t\t\tunmount(this.#instance);\n\t\t};\n\t}\n\n\t/** @param {Record<string, any>} props */\n\t$set(props) {\n\t\tthis.#instance.$set(props);\n\t}\n\n\t/**\n\t * @param {string} event\n\t * @param {(...args: any[]) => any} callback\n\t * @returns {any}\n\t */\n\t$on(event, callback) {\n\t\tthis.#events[event] = this.#events[event] || [];\n\n\t\t/** @param {any[]} args */\n\t\tconst cb = (...args) => callback.call(this, ...args);\n\t\tthis.#events[event].push(cb);\n\t\treturn () => {\n\t\t\tthis.#events[event] = this.#events[event].filter(/** @param {any} fn */ (fn) => fn !== cb);\n\t\t};\n\t}\n\n\t$destroy() {\n\t\tthis.#instance.$destroy();\n\t}\n}\n\n/**\n * Runs the given function once immediately on the server, and works like `$effect.pre` on the client.\n *\n * @deprecated Use this only as a temporary solution to migrate your component code to Svelte 5.\n * @param {() => void | (() => void)} fn\n * @returns {void}\n */\nexport function run(fn) {\n\tuser_pre_effect(() => {\n\t\tfn();\n\t\tvar effect = /** @type {import('#client').Effect} */ (active_effect);\n\t\t// If the effect is immediately made dirty again, mark it as maybe dirty to emulate legacy behaviour\n\t\tif ((effect.f & DIRTY) !== 0) {\n\t\t\tlet filename = \"a file (we can't know which one)\";\n\t\t\tif (DEV) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfilename = dev_current_component_function?.[FILENAME] ?? filename;\n\t\t\t}\n\t\t\tw.legacy_recursive_reactive_block(filename);\n\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t}\n\t});\n}\n\n/**\n * Function to mimic the multiple listeners available in svelte 4\n * @deprecated\n * @param {EventListener[]} handlers\n * @returns {EventListener}\n */\nexport function handlers(...handlers) {\n\treturn function (event) {\n\t\tconst { stopImmediatePropagation } = event;\n\t\tlet stopped = false;\n\n\t\tevent.stopImmediatePropagation = () => {\n\t\t\tstopped = true;\n\t\t\tstopImmediatePropagation.call(event);\n\t\t};\n\n\t\tconst errors = [];\n\n\t\tfor (const handler of handlers) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error `this` is not typed\n\t\t\t\thandler?.call(this, event);\n\t\t\t} catch (e) {\n\t\t\t\terrors.push(e);\n\t\t\t}\n\n\t\t\tif (stopped) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let error of errors) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Function to create a `bubble` function that mimic the behavior of `on:click` without handler available in svelte 4.\n * @deprecated Use this only as a temporary solution to migrate your automatically delegated events in Svelte 5.\n */\nexport function createBubbler() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\te.lifecycle_outside_component('createBubbler');\n\t}\n\n\treturn (/**@type {string}*/ type) => (/**@type {Event}*/ event) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\nexport {\n\tonce,\n\tpreventDefault,\n\tself,\n\tstopImmediatePropagation,\n\tstopPropagation,\n\ttrusted,\n\tpassive,\n\tnonpassive\n} from '../internal/client/dom/legacy/event-modifiers.js';\n","export const matchers = {};","<!-- This file is generated by @sveltejs/kit — do not edit it! -->\n<svelte:options runes={true} />\n<script>\n\timport { setContext, onMount, tick } from 'svelte';\n\timport { browser } from '$app/environment';\n\n\t// stores\n\tlet { stores, page, constructors, components = [], form, data_0 = null, data_1 = null, data_2 = null } = $props();\n\n\tif (!browser) {\n\t\tsetContext('__svelte__', stores);\n\t}\n\n\tif (browser) {\n\t\t$effect.pre(() => stores.page.set(page));\n\t} else {\n\t\tstores.page.set(page);\n\t}\n\t$effect(() => {\n\t\tstores;page;constructors;components;form;data_0;data_1;data_2;\n\t\tstores.page.notify();\n\t});\n\n\tlet mounted = $state(false);\n\tlet navigated = $state(false);\n\tlet title = $state(null);\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttick().then(() => {\n\t\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n\n\tconst Pyramid_2=$derived(constructors[2])\n</script>\n\n{#if constructors[1]}\n\t{@const Pyramid_0 = constructors[0]}\n\t\t\t\t\t\t\t<!-- svelte-ignore binding_property_non_reactive -->\n\t\t\t\t\t\t\t<Pyramid_0 bind:this={components[0]} data={data_0} {form} params={page.params}>\n\t\t\t\t\t\t\t\t{#if constructors[2]}\n\t\t\t\t\t\t\t\t\t{@const Pyramid_1 = constructors[1]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- svelte-ignore binding_property_non_reactive -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Pyramid_1 bind:this={components[1]} data={data_1} {form} params={page.params}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- svelte-ignore binding_property_non_reactive -->\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Pyramid_2 bind:this={components[2]} data={data_2} {form} params={page.params} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Pyramid_1>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t{@const Pyramid_1 = constructors[1]}\n\t\t\t\t\t\t\t\t\t<!-- svelte-ignore binding_property_non_reactive -->\n\t\t\t\t\t\t\t\t\t<Pyramid_1 bind:this={components[1]} data={data_1} {form} params={page.params} />\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</Pyramid_0>\n\n{:else}\n\t{@const Pyramid_0 = constructors[0]}\n\t<!-- svelte-ignore binding_property_non_reactive -->\n\t<Pyramid_0 bind:this={components[0]} data={data_0} {form} params={page.params} />\n\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","import { asClassComponent } from 'svelte/legacy';\nimport Root from './root.svelte';\nexport default asClassComponent(Root);","export { matchers } from './matchers.js';\n\nexport const nodes = [\n\t() => import('./nodes/0'),\n\t() => import('./nodes/1'),\n\t() => import('./nodes/2'),\n\t() => import('./nodes/3'),\n\t() => import('./nodes/4')\n];\n\nexport const server_loads = [];\n\nexport const dictionary = {\n\t\t\"/[[company]]/cover-letter\": [4,[2]],\n\t\t\"/[[company]]\": [3]\n\t};\n\nexport const hooks = {\n\thandleError: (({ error }) => { console.error(error) }),\n\t\n\treroute: (() => {}),\n\ttransport: {}\n};\n\nexport const decoders = Object.fromEntries(Object.entries(hooks.transport).map(([k, v]) => [k, v.decode]));\n\nexport const hash = false;\n\nexport const decode = (type, value) => decoders[type](value);\n\nexport { default as root } from '../root.js';"],"file":"app.C401eMJs.js"}