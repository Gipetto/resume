{"version":3,"file":"Cj9BdqEF.js","sources":["../../../../../../node_modules/svelte/src/internal/client/dom/elements/misc.js","../../../../../../node_modules/svelte/src/internal/client/dom/blocks/each.js","../../../../../../node_modules/clsx/dist/clsx.mjs","../../../../../../node_modules/svelte/src/internal/shared/attributes.js","../../../../../../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../../../../../../node_modules/svelte/src/internal/client/dom/elements/class.js","../../../../../../src/lib/services/i18n.svelte.ts","../../../../../../src/lib/components/Icon.svelte"],"sourcesContent":["import { hydrating } from '../hydration.js';\nimport { clear_text_content, get_first_child } from '../operations.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {HTMLElement} dom\n * @param {boolean} value\n * @returns {void}\n */\nexport function autofocus(dom, value) {\n\tif (value) {\n\t\tconst body = document.body;\n\t\tdom.autofocus = true;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (document.activeElement === body) {\n\t\t\t\tdom.focus();\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * The child of a textarea actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLTextAreaElement} dom\n * @returns {void}\n */\nexport function remove_textarea_child(dom) {\n\tif (hydrating && get_first_child(dom) !== null) {\n\t\tclear_text_content(dom);\n\t}\n}\n\nlet listening_to_form_reset = false;\n\nexport function add_form_reset_listener() {\n\tif (!listening_to_form_reset) {\n\t\tlistening_to_form_reset = true;\n\t\tdocument.addEventListener(\n\t\t\t'reset',\n\t\t\t(evt) => {\n\t\t\t\t// Needs to happen one tick later or else the dom properties of the form\n\t\t\t\t// elements have not updated to their reset values yet\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (!evt.defaultPrevented) {\n\t\t\t\t\t\tfor (const e of /**@type {HTMLFormElement} */ (evt.target).elements) {\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\te.__on_r?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t// In the capture phase to guarantee we get noticed of it (no possiblity of stopPropagation)\n\t\t\t{ capture: true }\n\t\t);\n\t}\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, active_reaction, get } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { derived_safe_equal } from '../../reactivity/deriveds.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\t// TODO: ideally we could use derived for runes mode but because of the ability\n\t// to use a store which can be mutated, we can't do that here as mutating a store\n\t// will still result in the collection array being the same from the store\n\tvar each_array = derived_safe_equal(() => {\n\t\tvar collection = get_collection();\n\n\t\treturn is_array(collection) ? collection : collection == null ? [] : array_from(collection);\n\t});\n\n\tblock(() => {\n\t\tvar array = get(each_array);\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch â€” remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key, get_collection);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget(each_array);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).debug = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i, get_collection), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean) || (value === '' && name === 'class')) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n","import { DEV } from 'esm-env';\nimport { hydrating, set_hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { clsx } from '../../../shared/attributes.js';\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when it's `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value ?? '';\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'style' && '__styles' in element) {\n\t\t// reset styles to force style: directive to update\n\t\telement.__styles = {};\n\t}\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet was_hydrating = hydrating;\n\tif (hydrating) {\n\t\tset_hydrating(false);\n\t}\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\tif (\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\tsetters_cache.has(node.nodeName) ||\n\t\t\t// customElements may not be available in browser extension contexts\n\t\t\t!customElements ||\n\t\t\tcustomElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object'\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t}\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string, any> | undefined} prev\n * @param {Record<string, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [preserve_attribute_case]\n * @param {boolean} [is_custom_element]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(\n\telement,\n\tprev,\n\tnext,\n\tcss_hash,\n\tpreserve_attribute_case = false,\n\tis_custom_element = false,\n\tskip_warning = false\n) {\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet is_hydrating_custom_element = hydrating && is_custom_element;\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(false);\n\t}\n\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (next.class) {\n\t\tnext.class = clsx(next.class);\n\t}\n\n\tif (css_hash !== undefined) {\n\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// @ts-expect-error\n\tvar attributes = /** @type {Record<string, unknown>} **/ (element.__attributes ??= {});\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style' && value != null) {\n\t\t\telement.style.cssText = value + '';\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (!is_custom_element && (key === '__value' || (key === 'value' && value != null))) {\n\t\t\t// @ts-ignore We're not running this for custom elements because __value is actually\n\t\t\t// how Lit stores the current value on the element, and messing with that would break things.\n\t\t\telement.value = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked â€” preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\t\t\t\t\tconst use_default = prev === undefined;\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet previous = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = previous;\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tinput.value = input.__value = use_default ? previous : null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet previous = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = previous;\n\t\t\t\t\t\tinput.checked = use_default ? previous : false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tset_attribute(element, name, value);\n\t\t\t}\n\t\t}\n\t\tif (key === 'style' && '__styles' in element) {\n\t\t\t// reset styles to force style: directive to update\n\t\t\telement.__styles = {};\n\t\t}\n\t}\n\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(true);\n\t}\n\n\treturn current;\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n","import { hydrating } from '../hydration.js';\n\n/**\n * @param {SVGElement} dom\n * @param {string} value\n * @param {string} [hash]\n * @returns {void}\n */\nexport function set_svg_class(dom, value, hash) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value, hash);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {MathMLElement} dom\n * @param {string} value\n * @param {string} [hash]\n * @returns {void}\n */\nexport function set_mathml_class(dom, value, hash) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value, hash);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {HTMLElement} dom\n * @param {string} value\n * @param {string} [hash]\n * @returns {void}\n */\nexport function set_class(dom, value, hash) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value, hash);\n\n\tif (hydrating && dom.className === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.className !== next_class_name)\n\t) {\n\t\t// Removing the attribute when the value is only an empty string causes\n\t\t// peformance issues vs simply making the className an empty string. So\n\t\t// we should only remove the class if the the value is nullish.\n\t\tif (value == null && !hash) {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.className = next_class_name;\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {string} [hash]\n * @returns {string | V}\n */\nfunction to_class(value, hash) {\n\treturn (value == null ? '' : value) + (hash ? ' ' + hash : '');\n}\n\n/**\n * @param {Element} dom\n * @param {string} class_name\n * @param {boolean} value\n * @returns {void}\n */\nexport function toggle_class(dom, class_name, value) {\n\tif (value) {\n\t\tif (dom.classList.contains(class_name)) return;\n\t\tdom.classList.add(class_name);\n\t} else {\n\t\tif (!dom.classList.contains(class_name)) return;\n\t\tdom.classList.remove(class_name);\n\t}\n}\n","import stringsData from \"../data/strings-en_US.json\"\n\nconst uiStrings: {[key: string]: string} = stringsData\n\nconst _ = (key: string, _default: string = \"\"): string => {\n  // return uiStrings.hasOwnProperty(key) ? uiStrings[key] : _default\n  return Object.prototype.hasOwnProperty.call(uiStrings, key) ? uiStrings[key] : _default\n}\n\nexport default _\n","<script lang=\"ts\">\n  /* eslint-disable svelte/no-at-html-tags */\n  import * as icons from \"../icons.json\"\n  import type { IconData } from \"../types/icons\"\n\n  type IconName = keyof typeof icons\n  \n  const { \n    name,\n    width = 16,\n    height = 16,\n    title = undefined,\n    align = \"baseline\"\n  }: {\n    name: IconName\n    width?: number\n    height?: number\n    title?: string | undefined\n    align?: \"baseline\" | \"middle\"\n  } = $props()\n\n  const typedIcons: IconData = icons\n  const icon = typedIcons[name]\n</script>\n\n<svg\n  class=\"icon va-{align}\"\n  role=\"img\"\n  width={width}\n  height={height}\n  viewBox=\"0 0 {icon.viewBox.w} {icon.viewBox.h}\"\n  fill={icon.fill ?? \"none\"}\n  xmlns=\"http://www.w3.org/2000/svg\"\n  ><title>{@html title || icon.title}</title><g>{@html icon.svg}</g></svg\n>\n\n<style lang=\"scss\">\n  .icon {\n    position: relative;\n  }\n\n  :global {\n    .dark .icon {\n      fill: white;\n    }\n  }\n</style>"],"names":["autofocus","dom","value","body","queue_micro_task","index","_","i","pause_effects","state","items","controlled_anchor","items_map","transitions","length","pause_children","is_controlled","parent_node","clear_text_content","link","run_out_transitions","item","destroy_effect","each","node","flags","get_collection","get_key","render_fn","fallback_fn","anchor","EACH_IS_CONTROLLED","hydrating","set_hydrate_node","get_first_child","create_text","hydrate_next","fallback","was_empty","each_array","derived_safe_equal","collection","is_array","array_from","block","array","get","mismatch","is_else","HYDRATION_START_ELSE","remove_nodes","set_hydrating","prev","hydrate_node","HYDRATION_END","key","create_item","reconcile","resume_effect","branch","pause_effect","is_animated","EACH_IS_ANIMATED","should_update","EACH_ITEM_REACTIVE","EACH_INDEX_REACTIVE","first","current","seen","to_animate","matched","stashed","_a","child_anchor","update_item","INERT","_b","start","j","a","b","move","to_destroy","destroy_length","_c","_d","active_effect","type","internal_set","next","reactive","mutable","EACH_ITEM_IMMUTABLE","v","mutable_source","source","end","dest","next_node","get_next_sibling","r","f","n","o","clsx","_clsx","set_selected","element","selected","set_attribute","attribute","skip_warning","attributes","LOADING_ATTR_SYMBOL","get_setters","set_attributes","css_hash","preserve_attribute_case","is_custom_element","is_hydrating_custom_element","is_option_element","setters","prev_value","prefix","opts","event_handle_key","event_name","delegated","is_delegated","is_capture_event","delegate","handle","evt","create_event","name","normalize_attribute","is_default","input","use_default","previous","setters_cache","descriptors","proto","element_proto","get_descriptors","get_prototype_of","set_svg_class","hash","prev_class_name","next_class_name","to_class","set_class","toggle_class","class_name","uiStrings","stringsData","_default","width","height","title","align","icon","icons","$$props","$.html","node_1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}