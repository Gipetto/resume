{"version":3,"file":"B9J1Q4wB.js","sources":["../../../../../../node_modules/svelte/src/internal/client/dom/blocks/html.js","../../../../../../src/lib/store.svelte.ts"],"sourcesContent":["/** @import { Effect, TemplateNode } from '#client' */\nimport { FILENAME, HYDRATION_ERROR } from '../../../../constants.js';\nimport { remove_effect_dom, template_effect } from '../../reactivity/effects.js';\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from '../hydration.js';\nimport { create_fragment_from_html } from '../reconciler.js';\nimport { assign_nodes } from '../template.js';\nimport * as w from '../../warnings.js';\nimport { hash, sanitize_location } from '../../../../utils.js';\nimport { DEV } from 'esm-env';\nimport { dev_current_component_function } from '../../context.js';\nimport { get_first_child, get_next_sibling } from '../operations.js';\nimport { active_effect } from '../../runtime.js';\nimport { COMMENT_NODE } from '#client/constants';\n\n/**\n * @param {Element} element\n * @param {string | null} server_hash\n * @param {string} value\n */\nfunction check_hash(element, server_hash, value) {\n\tif (!server_hash || server_hash === hash(String(value ?? ''))) return;\n\n\tlet location;\n\n\t// @ts-expect-error\n\tconst loc = element.__svelte_meta?.loc;\n\tif (loc) {\n\t\tlocation = `near ${loc.file}:${loc.line}:${loc.column}`;\n\t} else if (dev_current_component_function?.[FILENAME]) {\n\t\tlocation = `in ${dev_current_component_function[FILENAME]}`;\n\t}\n\n\tw.hydration_html_changed(sanitize_location(location));\n}\n\n/**\n * @param {Element | Text | Comment} node\n * @param {() => string} get_value\n * @param {boolean} [svg]\n * @param {boolean} [mathml]\n * @param {boolean} [skip_warning]\n * @returns {void}\n */\nexport function html(node, get_value, svg = false, mathml = false, skip_warning = false) {\n\tvar anchor = node;\n\n\tvar value = '';\n\n\ttemplate_effect(() => {\n\t\tvar effect = /** @type {Effect} */ (active_effect);\n\n\t\tif (value === (value = get_value() ?? '')) {\n\t\t\tif (hydrating) hydrate_next();\n\t\t\treturn;\n\t\t}\n\n\t\tif (effect.nodes_start !== null) {\n\t\t\tremove_effect_dom(effect.nodes_start, /** @type {TemplateNode} */ (effect.nodes_end));\n\t\t\teffect.nodes_start = effect.nodes_end = null;\n\t\t}\n\n\t\tif (value === '') return;\n\n\t\tif (hydrating) {\n\t\t\t// We're deliberately not trying to repair mismatches between server and client,\n\t\t\t// as it's costly and error-prone (and it's an edge case to have a mismatch anyway)\n\t\t\tvar hash = /** @type {Comment} */ (hydrate_node).data;\n\t\t\tvar next = hydrate_next();\n\t\t\tvar last = next;\n\n\t\t\twhile (\n\t\t\t\tnext !== null &&\n\t\t\t\t(next.nodeType !== COMMENT_NODE || /** @type {Comment} */ (next).data !== '')\n\t\t\t) {\n\t\t\t\tlast = next;\n\t\t\t\tnext = /** @type {TemplateNode} */ (get_next_sibling(next));\n\t\t\t}\n\n\t\t\tif (next === null) {\n\t\t\t\tw.hydration_mismatch();\n\t\t\t\tthrow HYDRATION_ERROR;\n\t\t\t}\n\n\t\t\tif (DEV && !skip_warning) {\n\t\t\t\tcheck_hash(/** @type {Element} */ (next.parentNode), hash, value);\n\t\t\t}\n\n\t\t\tassign_nodes(hydrate_node, last);\n\t\t\tanchor = set_hydrate_node(next);\n\t\t\treturn;\n\t\t}\n\n\t\tvar html = value + '';\n\t\tif (svg) html = `<svg>${html}</svg>`;\n\t\telse if (mathml) html = `<math>${html}</math>`;\n\n\t\t// Don't use create_fragment_with_script_from_html here because that would mean script tags are executed.\n\t\t// @html is basically `.innerHTML = ...` and that doesn't execute scripts either due to security reasons.\n\t\t/** @type {DocumentFragment | Element} */\n\t\tvar node = create_fragment_from_html(html);\n\n\t\tif (svg || mathml) {\n\t\t\tnode = /** @type {Element} */ (get_first_child(node));\n\t\t}\n\n\t\tassign_nodes(\n\t\t\t/** @type {TemplateNode} */ (get_first_child(node)),\n\t\t\t/** @type {TemplateNode} */ (node.lastChild)\n\t\t);\n\n\t\tif (svg || mathml) {\n\t\t\twhile (get_first_child(node)) {\n\t\t\t\tanchor.before(/** @type {Node} */ (get_first_child(node)));\n\t\t\t}\n\t\t} else {\n\t\t\tanchor.before(node);\n\t\t}\n\t});\n}\n","import { on } from \"svelte/events\"\nimport type { ResumeData, Theme } from \"../types/global\"\nimport { browser } from \"$app/environment\"\n\n/**\n * Resume Data\n * @TODO - convert to Context\n */\nimport resumeData from \"$lib/data/content-en_US.json\"\nclass ResumeStore {\n  data = $state<ResumeData>()\n\n  constructor(input: ResumeData) {\n    this.data = input\n  }\n\n  config<T extends keyof ResumeData[\"config\"]>(field: T) {\n    return this.data?.config[field]\n  }\n\n  get<T extends keyof ResumeData>(field: T) {\n    return this.data?.[field]\n  }\n}\n\nconst content = new ResumeStore(resumeData)\n\n/**\n * Company Data for Cover Letter\n */\n\ntype Company = {\n  name: string\n  hiringManager: string\n  address1: string\n  address2?: string\n  city: string\n  state: string\n  zipCode: string\n}\n\ntype Companies = {\n  [k: string]: Company\n}\n\nimport companiesData from \"$lib/data/companies.json\"\nclass CompanyStore {\n  data = $state<Companies>()\n\n  constructor(companies: Companies) {\n    this.data = companies\n  }\n\n  get<T extends keyof Companies>(key: T) {\n    return this.data?.[key]\n  }\n}\n\nconst companies = new CompanyStore(companiesData)\n\n/**\n * Color Theme\n */\nlet startingTheme: Theme = \"light\"\nlet browserThemePreference\n\nif (browser) {\n  const storedTheme = localStorage.getItem(\"theme\") as Theme\n  browserThemePreference = window.matchMedia(\"(prefers-color-scheme: dark)\")\n  startingTheme = storedTheme || (browserThemePreference.matches ? \"dark\" : \"light\")\n}\n\nconst createThemeStore = (initialValue: \"light\" | \"dark\") => {\n  let theme = $state(initialValue)\n\n  return {\n    get value() {\n      return theme\n    },\n    set value(value) {\n      theme = value\n      localStorage.setItem(\"theme\", theme)\n    }\n  }\n}\n\nconst theme = createThemeStore(startingTheme)\n\n// Handle the browser preferences changing\nif (browser && browserThemePreference) {\n  on(browserThemePreference, \"change\", (e) => {\n    /**\n     * The media query above is specifically for dark mode, \n     * so `e.matches` here is \"dark mode === true\"\n     */\n    theme.value = e.matches ? \"dark\" : \"light\"\n  })\n}\n\nexport {\n  content,\n  companies,\n  theme\n}\nexport type {\n  Company\n}"],"names":["html","node","get_value","svg","mathml","skip_warning","anchor","value","template_effect","effect","active_effect","hydrating","hydrate_next","remove_effect_dom","hydrate_node","next","last","COMMENT_NODE","get_next_sibling","w.hydration_mismatch","HYDRATION_ERROR","assign_nodes","set_hydrate_node","create_fragment_from_html","get_first_child","ResumeStore","input","field","_a","content","resumeData","CompanyStore","companies","key","companiesData","startingTheme","browserThemePreference","storedTheme","createThemeStore","initialValue","theme","on","e"],"mappings":"qcA2CO,SAASA,GAAKC,EAAMC,EAAWC,EAAM,GAAOC,EAAS,GAAOC,GAAe,GAAO,CACxF,IAAIC,EAASL,EAETM,EAAQ,GAEZC,EAAgB,IAAM,CACrB,IAAIC,EAAgCC,EAEpC,GAAIH,KAAWA,EAAQL,EAAS,GAAM,IAAK,CACtCS,GAAWC,EAAY,EAC3B,MACD,CAOA,GALIH,EAAO,cAAgB,OAC1BI,EAAkBJ,EAAO,YAA0CA,EAAO,SAAS,EACnFA,EAAO,YAAcA,EAAO,UAAY,MAGrCF,IAAU,GAEd,IAAII,EAAW,CAGqBG,EAAc,KAIjD,QAHIC,EAAOH,EAAY,EACnBI,EAAOD,EAGVA,IAAS,OACRA,EAAK,WAAaE,GAAwCF,EAAM,OAAS,KAE1EC,EAAOD,EACPA,EAAoCG,EAAiBH,CAAI,EAG1D,GAAIA,IAAS,KACZI,MAAAA,EAAoB,EACdC,EAOPC,EAAaP,EAAcE,CAAI,EAC/BV,EAASgB,EAAiBP,CAAI,EAC9B,MACD,CAEA,IAAIf,EAAOO,EAAQ,GACfJ,EAAKH,EAAO,QAAQA,CAAI,SACnBI,IAAQJ,EAAO,SAASA,CAAI,WAKrC,IAAIC,EAAOsB,EAA0BvB,CAAI,EAWzC,IATIG,GAAOC,KACVH,EAA+BuB,EAAgBvB,CAAI,GAGpDoB,EAC8BG,EAAgBvB,CAAI,EACpBA,EAAK,SACrC,EAEME,GAAOC,EACV,KAAOoB,EAAgBvB,CAAI,GAC1BK,EAAO,OAA4BkB,EAAgBvB,CAAI,CAAC,OAGzDK,EAAO,OAAOL,CAAI,EAEpB,CAAC,CACF,+6OC7GM,MAAAwB,CAAY,CAGhB,YAAYC,EAAmB,eAC7B,KAAK,KAAOA,CACd,KAJA,+BAAA,0BAMA,OAA6CC,EAAU,OAC9C,OAAAC,EAAA,KAAK,OAAL,YAAAA,EAAW,OAAOD,EAC3B,CAEA,IAAgCA,EAAU,cACjCC,EAAA,KAAK,OAAL,YAAAA,EAAYD,EACrB,CACF,qBAEME,GAAA,IAAcJ,EAAYK,CAAU,QAqBpC,MAAAC,CAAa,CAGjB,YAAYC,EAAsB,eAChC,KAAK,KAAOA,CACd,KAJA,+BAAA,0BAMA,IAA+BC,EAAQ,cAC9BL,EAAA,KAAK,OAAL,YAAAA,EAAYK,EACrB,CACF,qBAEMD,GAAA,IAAgBD,EAAaG,CAAa,EAK5C,IAAAC,EAAuB,QACvBC,EAES,CACL,MAAAC,EAAc,aAAa,QAAQ,OAAO,EAChDD,EAAyB,OAAO,WAAW,8BAA8B,EACzED,EAAgBE,IAAgBD,EAAuB,QAAU,OAAS,QAC5E,OAEME,EAAoBC,GAAmC,CACvDC,IAAAA,MAAeD,CAAY,CAAA,SAGzB,IAAA,OAAQ,UACHC,CAAAA,CACT,MACI,MAAMjC,EAAO,CACfiC,EAAAA,EAAQjC,EAAA,EAAA,EACR,aAAa,QAAQ,UAASiC,CAAK,CAAA,CACrC,EAEJ,EAEMA,EAAQF,EAAiBH,CAAa,EAG7BC,GACbK,EAAGL,EAAwB,SAAWM,GAAM,CAK1CF,EAAM,MAAQE,EAAE,QAAU,OAAS,OACrC,CAAC","x_google_ignoreList":[0]}